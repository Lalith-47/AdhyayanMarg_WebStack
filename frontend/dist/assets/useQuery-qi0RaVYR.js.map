{"version":3,"file":"useQuery-qi0RaVYR.js","sources":["../../node_modules/react-query/es/core/queryObserver.js","../../node_modules/react-query/es/core/mutationObserver.js","../../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../../node_modules/react-query/es/react/utils.js","../../node_modules/react-query/es/react/useMutation.js","../../node_modules/react-query/es/react/useBaseQuery.js","../../node_modules/react-query/es/react/useQuery.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.selectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    var nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result, defaultedOptions) {\n    var _this2 = this;\n\n    var trackedResult = {};\n\n    var trackProp = function trackProp(key) {\n      if (!_this2.trackedProps.includes(key)) {\n        _this2.trackedProps.push(key);\n      }\n    };\n\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          trackProp(key);\n          return result[key];\n        }\n      });\n    });\n\n    if (defaultedOptions.useErrorBoundary || defaultedOptions.suspense) {\n      trackProp('error');\n    }\n\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(_extends({}, options, {\n      meta: {\n        refetchPage: options == null ? void 0 : options.refetchPage\n      }\n    }));\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.computeRefetchInterval = function computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval(nextInterval) {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n          data = this.selectResult;\n        } else {\n          try {\n            this.selectFn = options.select;\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.selectResult = data;\n            this.selectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            this.selectError = selectError;\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.selectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isRefetching: isFetching && status !== 'loading',\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    var value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { getDefaultState } from './mutation';\nimport { notifyManager } from './notifyManager';\nimport { Subscribable } from './subscribable';\n// CLASS\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(MutationObserver, _Subscribable);\n\n  function MutationObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n\n    _this.setOptions(options);\n\n    _this.bindMethods();\n\n    _this.updateResult();\n\n    return _this;\n  }\n\n  var _proto = MutationObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  };\n\n  _proto.onMutationUpdate = function onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    var notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.reset = function reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  };\n\n  _proto.mutate = function mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, _extends({}, this.options, {\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    }));\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  };\n\n  _proto.updateResult = function updateResult() {\n    var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n\n    var result = _extends({}, state, {\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    });\n\n    this.currentResult = result;\n  };\n\n  _proto.notify = function notify(options) {\n    var _this2 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the mutate callbacks\n      if (_this2.mutateOptions) {\n        if (options.onSuccess) {\n          _this2.mutateOptions.onSuccess == null ? void 0 : _this2.mutateOptions.onSuccess(_this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(_this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\n        } else if (options.onError) {\n          _this2.mutateOptions.onError == null ? void 0 : _this2.mutateOptions.onError(_this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n          _this2.mutateOptions.onSettled == null ? void 0 : _this2.mutateOptions.onSettled(undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        _this2.listeners.forEach(function (listener) {\n          listener(_this2.currentResult);\n        });\n      }\n    });\n  };\n\n  return MutationObserver;\n}(Subscribable);","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","export function shouldThrowError(suspense, _useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary.apply(void 0, params);\n  } // Allow useErrorBoundary to override suspense's throwing behavior\n\n\n  if (typeof _useErrorBoundary === 'boolean') return _useErrorBoundary; // If suspense is enabled default to throwing errors\n\n  return !!suspense;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { noop, parseMutationArgs } from '../core/utils';\nimport { MutationObserver } from '../core/mutationObserver';\nimport { useQueryClient } from './QueryClientProvider';\nimport { shouldThrowError } from './utils'; // HOOK\n\nexport function useMutation(arg1, arg2, arg3) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var options = parseMutationArgs(arg1, arg2, arg3);\n  var queryClient = useQueryClient();\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new MutationObserver(queryClient, options);\n  } else {\n    obsRef.current.setOptions(options);\n  }\n\n  var currentResult = obsRef.current.getCurrentResult();\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, []);\n  var mutate = React.useCallback(function (variables, mutateOptions) {\n    obsRef.current.mutate(variables, mutateOptions).catch(noop);\n  }, []);\n\n  if (currentResult.error && shouldThrowError(undefined, obsRef.current.options.useErrorBoundary, [currentResult.error])) {\n    throw currentResult.error;\n  }\n\n  return _extends({}, currentResult, {\n    mutate: mutate,\n    mutateAsync: currentResult.mutate\n  });\n}","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nimport { shouldThrowError } from './utils';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    } // Set cache time to 1 if the option has been set to 0\n    // when using suspense to prevent infinite loop of fetches\n\n\n    if (defaultedOptions.cacheTime === 0) {\n      defaultedOptions.cacheTime = 1;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.suspense, defaultedOptions.useErrorBoundary, [result.error, observer.getCurrentQuery()])) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result, defaultedOptions);\n  }\n\n  return result;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}"],"names":["QueryObserver","_Subscribable","client","options","_this","call","this","trackedProps","selectError","bindMethods","setOptions","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","listeners","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","shouldFetchOn","refetchOnReconnect","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","defaultQueryObserverOptions","enabled","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateResult","staleTime","updateStaleTimeout","nextRefetchInterval","computeRefetchInterval","currentRefetchInterval","updateRefetchInterval","getOptimisticResult","defaultedOptions","query","getQueryCache","build","createResult","getCurrentResult","currentResult","trackResult","result","_this2","trackedResult","trackProp","key","includes","push","Object","keys","forEach","defineProperty","configurable","enumerable","get","useErrorBoundary","suspense","getNextResult","_this3","Promise","resolve","reject","unsubscribe","subscribe","isFetching","isError","throwOnError","error","getCurrentQuery","fetch","_extends","meta","refetchPage","fetchOptimistic","_this4","then","fetchOptions","_this5","promise","catch","noop","_this6","clearStaleTimeout","isServer","isStale","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this$options$refetch","refetchInterval","data","nextInterval","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","optimisticResults","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","selectFn","selectResult","structuralSharing","replaceEqualDeep","getLogger","placeholderData","Date","now","isLoading","isIdle","failureCount","fetchFailureCount","errorUpdateCount","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","some","typedKey","changed","isIncluded","x","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","onQueryUpdate","action","type","onSuccess","isCancelledError","onError","_this8","notifyManager","batch","onSettled","listener","Subscribable","retryOnMount","shouldLoadOnMount","refetchOnMount","field","value","isStaleByTime","MutationObserver","mutate","reset","defaultMutationOptions","_this$currentMutation","currentMutation","onMutationUpdate","variables","mutateOptions","getMutationCache","execute","getDefaultState","context","_isReset","QueryErrorResetBoundaryContext","React","createContext","clearReset","isReset","shouldThrowError","_useErrorBoundary","params","apply","useMutation","arg1","arg2","arg3","mountedRef","useRef","forceUpdate","useState","parseMutationArgs","queryClient","useQueryClient","obsRef","current","useEffect","batchCalls","useCallback","mutateAsync","useBaseQuery","Observer","errorResetBoundary","useContext","cacheTime","observer","_ref","useQuery","parseQueryArgs"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}