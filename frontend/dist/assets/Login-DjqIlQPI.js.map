{"version":3,"file":"Login-DjqIlQPI.js","sources":["../../src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { motion } from \"framer-motion\";\nimport { Eye, EyeOff, User, Mail, Lock, ArrowRight } from \"lucide-react\";\nimport Button from \"../components/UI/Button\";\nimport Card from \"../components/UI/Card\";\nimport Input from \"../components/UI/Input\";\nimport { apiService } from \"../utils/api\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst Login = () => {\n  const { t } = useTranslation();\n  const { login } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Get the intended destination or default to dashboard\n  const from = location.state?.from?.pathname || \"/dashboard\";\n\n  const [mode, setMode] = useState(\"login\"); // \"login\" or \"register\"\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors((prev) => ({\n        ...prev,\n        [name]: \"\",\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (mode === \"register\") {\n      if (!formData.name) {\n        newErrors.name = \"Name is required\";\n      } else if (formData.name.length < 2) {\n        newErrors.name = \"Name must be at least 2 characters\";\n      }\n    }\n\n    if (!formData.email) {\n      newErrors.email = \"Email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = \"Please enter a valid email\";\n    }\n\n    if (!formData.password) {\n      newErrors.password = \"Password is required\";\n    } else if (formData.password.length < 6) {\n      newErrors.password = \"Password must be at least 6 characters\";\n    }\n\n    if (mode === \"register\") {\n      if (!formData.confirmPassword) {\n        newErrors.confirmPassword = \"Please confirm your password\";\n      } else if (formData.password !== formData.confirmPassword) {\n        newErrors.confirmPassword = \"Passwords do not match\";\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setLoading(true);\n    setErrors({});\n\n    try {\n      let response;\n      if (mode === \"login\") {\n        response = await apiService.login({\n          email: formData.email,\n          password: formData.password,\n        });\n      } else {\n        response = await apiService.register({\n          name: formData.name,\n          email: formData.email,\n          password: formData.password,\n        });\n      }\n\n      if (response.data.success) {\n        // Store token in localStorage\n        localStorage.setItem(\"authToken\", response.data.token);\n\n        // Update auth context\n        login(response.data.user);\n\n        // Redirect to intended destination or dashboard\n        navigate(from, { replace: true });\n      } else {\n        setErrors({\n          general: response.data.message || \"Authentication failed\",\n        });\n      }\n    } catch (error) {\n      console.error(\"Auth error:\", error);\n      let errorMessage = \"Network error. Please try again.\";\n\n      if (error.response?.status === 401) {\n        if (error.response?.data?.message?.includes(\"password\")) {\n          errorMessage = \"Invalid password\";\n        } else if (error.response?.data?.message?.includes(\"user\")) {\n          errorMessage = \"No user found with this email\";\n        } else {\n          errorMessage = \"Invalid credentials\";\n        }\n      } else if (error.response?.data?.message) {\n        errorMessage = error.response.data.message;\n      }\n\n      setErrors({ general: errorMessage });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const switchMode = () => {\n    setMode(mode === \"login\" ? \"register\" : \"login\");\n    setFormData({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    });\n    setErrors({});\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-gray-900 flex items-center justify-center p-4 sm:p-6 lg:p-8\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        className=\"w-full max-w-md sm:max-w-lg\"\n      >\n        <Card className=\"p-6 sm:p-8 lg:p-10 shadow-2xl\">\n          {/* Header */}\n          <div className=\"text-center mb-6 sm:mb-8\">\n            <div className=\"w-14 h-14 sm:w-16 sm:h-16 bg-primary-600 rounded-full flex items-center justify-center mx-auto mb-3 sm:mb-4\">\n              <User className=\"w-7 h-7 sm:w-8 sm:h-8 text-white\" />\n            </div>\n            <h1 className=\"text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900 dark:text-white mb-2 sm:mb-3\">\n              {mode === \"login\" ? t(\"auth.signIn\") : t(\"auth.createAccount\")}\n            </h1>\n            <p className=\"text-sm sm:text-base text-gray-600 dark:text-gray-300 leading-relaxed px-2\">\n              {mode === \"login\"\n                ? t(\"auth.signInSubtitle\")\n                : t(\"auth.createAccountSubtitle\")}\n            </p>\n          </div>\n\n          {/* Form */}\n          <form onSubmit={handleSubmit} className=\"space-y-4 sm:space-y-6\">\n            {/* General Error */}\n            {errors.general && (\n              <div className=\"bg-red-50 dark:bg-red-900 border border-red-200 dark:border-red-700 text-red-600 dark:text-red-400 px-3 sm:px-4 py-2 sm:py-3 rounded-lg text-xs sm:text-sm\">\n                {errors.general}\n              </div>\n            )}\n\n            {/* Name Field (Register only) */}\n            {mode === \"register\" && (\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  {t(\"auth.fullName\")}\n                </label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  placeholder=\"Enter your full name\"\n                  leftIcon={<User className=\"w-4 h-4 text-gray-400\" />}\n                  error={errors.name}\n                  required\n                  className=\"touch-target min-h-[44px]\"\n                />\n              </div>\n            )}\n\n            {/* Email Field */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                {t(\"auth.email\")}\n              </label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                placeholder=\"Enter your email\"\n                leftIcon={<Mail className=\"w-4 h-4 text-gray-400\" />}\n                error={errors.email}\n                required\n                className=\"touch-target min-h-[44px]\"\n              />\n            </div>\n\n            {/* Password Field */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                {t(\"auth.password\")}\n              </label>\n              <Input\n                type={showPassword ? \"text\" : \"password\"}\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                placeholder=\"Enter your password\"\n                leftIcon={<Lock className=\"w-4 h-4 text-gray-400\" />}\n                rightIcon={\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200 p-1 rounded hover:bg-gray-100 dark:hover:bg-gray-600 touch-target min-h-[40px] min-w-[40px] flex items-center justify-center\"\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"w-4 h-4\" />\n                    ) : (\n                      <Eye className=\"w-4 h-4\" />\n                    )}\n                  </button>\n                }\n                error={errors.password}\n                required\n                className=\"touch-target min-h-[44px]\"\n              />\n            </div>\n\n            {/* Confirm Password Field (Register only) */}\n            {mode === \"register\" && (\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  {t(\"auth.confirmPassword\")}\n                </label>\n                <Input\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleChange}\n                  placeholder=\"Confirm your password\"\n                  leftIcon={<Lock className=\"w-4 h-4 text-gray-400\" />}\n                  rightIcon={\n                    <button\n                      type=\"button\"\n                      onClick={() =>\n                        setShowConfirmPassword(!showConfirmPassword)\n                      }\n                      className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200 p-1 rounded hover:bg-gray-100 dark:hover:bg-gray-600 touch-target min-h-[40px] min-w-[40px] flex items-center justify-center\"\n                    >\n                      {showConfirmPassword ? (\n                        <EyeOff className=\"w-4 h-4\" />\n                      ) : (\n                        <Eye className=\"w-4 h-4\" />\n                      )}\n                    </button>\n                  }\n                  error={errors.confirmPassword}\n                  required\n                  className=\"touch-target min-h-[44px]\"\n                />\n              </div>\n            )}\n\n            {/* Submit Button */}\n            <Button\n              type=\"submit\"\n              disabled={loading}\n              className=\"w-full touch-target min-h-[48px] text-sm sm:text-base\"\n              size=\"lg\"\n            >\n              {loading ? (\n                <div className=\"flex items-center justify-center\">\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\n                  {mode === \"login\"\n                    ? t(\"auth.signingIn\")\n                    : t(\"auth.creatingAccount\")}\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center\">\n                  {mode === \"login\"\n                    ? t(\"auth.signIn\")\n                    : t(\"auth.createAccount\")}\n                  <ArrowRight className=\"w-4 h-4 ml-2\" />\n                </div>\n              )}\n            </Button>\n\n            {/* Switch Mode */}\n            <div className=\"text-center\">\n              <p className=\"text-sm sm:text-base text-gray-600 dark:text-gray-300\">\n                {mode === \"login\" ? t(\"auth.noAccount\") : t(\"auth.haveAccount\")}\n              </p>\n              <button\n                type=\"button\"\n                onClick={switchMode}\n                className=\"text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 font-medium mt-1 touch-target min-h-[44px] px-2 py-1\"\n              >\n                {mode === \"login\" ? t(\"auth.createAccount\") : t(\"auth.signIn\")}\n              </button>\n            </div>\n          </form>\n\n          {/* Back to Home */}\n          <div className=\"mt-4 sm:mt-6 text-center\">\n            <button\n              onClick={() => navigate(\"/\")}\n              className=\"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 text-sm touch-target min-h-[44px] px-2 py-1\"\n            >\n              ← Back to Home\n            </button>\n          </div>\n        </Card>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["Login","t","useTranslation","login","useAuth","navigate","useNavigate","from","_b","_a","useLocation","state","pathname","mode","setMode","useState","formData","setFormData","name","email","password","confirmPassword","errors","setErrors","loading","setLoading","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","handleChange","e","value","target","prev","jsx","className","children","motion","div","initial","opacity","y","animate","transition","duration","jsxs","Card","User","onSubmit","async","preventDefault","newErrors","length","test","Object","keys","validateForm","response","apiService","register","data","success","localStorage","setItem","token","user","replace","general","message","error","errorMessage","status","_d","_c","includes","_g","_e","_f","_i","_h","Input","type","onChange","placeholder","leftIcon","required","Mail","Lock","rightIcon","onClick","EyeOff","Eye","Button","disabled","size","ArrowRight"],"mappings":"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"}