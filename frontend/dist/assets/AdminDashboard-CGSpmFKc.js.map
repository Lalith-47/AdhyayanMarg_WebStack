{"version":3,"file":"AdminDashboard-CGSpmFKc.js","sources":["../../src/pages/AdminDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { apiService } from \"../utils/api\";\nimport Button from \"../components/UI/Button\";\nimport {\n  Shield,\n  Users,\n  Activity,\n  TrendingUp,\n  AlertCircle,\n  BarChart3,\n  PieChart,\n  Calendar,\n  Clock,\n  Eye,\n  UserCheck,\n  UserX,\n  Globe,\n  Smartphone,\n  Laptop,\n  Award,\n  Target,\n  Zap,\n  Database,\n  Settings,\n  Bell,\n  Mail,\n  MessageSquare,\n  BookOpen,\n  GraduationCap,\n  Briefcase,\n  Star,\n  Heart,\n  ThumbsUp,\n  Download,\n  RefreshCw,\n  Filter,\n  Search,\n  MoreVertical,\n  ChevronRight,\n  ChevronDown,\n  Plus,\n  Edit,\n  Trash2,\n  MoreHorizontal,\n  Loader2,\n} from \"lucide-react\";\nimport {\n  LineChart,\n  Line,\n  AreaChart,\n  Area,\n  BarChart,\n  Bar,\n  PieChart as RechartsPieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  RadialBarChart,\n  RadialBar,\n  ScatterChart,\n  Scatter,\n  ComposedChart,\n} from \"recharts\";\n\nconst AdminDashboard = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  const [timeRange, setTimeRange] = useState(\"7d\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [roleFilter, setRoleFilter] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pagination, setPagination] = useState(null);\n  const [error, setError] = useState(null);\n  const [quizData, setQuizData] = useState(null);\n  const [quizLoading, setQuizLoading] = useState(false);\n  const [lastQuizRefresh, setLastQuizRefresh] = useState(null);\n\n  // Password reset state\n  const [passwordResetModal, setPasswordResetModal] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordResetLoading, setPasswordResetLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  // Success popup state\n  const [showSuccessPopup, setShowSuccessPopup] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  // Delete user state\n  const [deleteUserModal, setDeleteUserModal] = useState(false);\n  const [userToDelete, setUserToDelete] = useState(null);\n  const [adminPassword, setAdminPassword] = useState(\"\");\n  const [deleteUserLoading, setDeleteUserLoading] = useState(false);\n\n  // Refresh state\n  const [refreshing, setRefreshing] = useState(false);\n  const [lastFetchTime, setLastFetchTime] = useState(null);\n\n  // Create user modal state\n  const [showCreateUserModal, setShowCreateUserModal] = useState(false);\n  const [createUserForm, setCreateUserForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    role: \"student\",\n  });\n  const [createUserLoading, setCreateUserLoading] = useState(false);\n  const [createUserErrors, setCreateUserErrors] = useState({});\n\n  // Settings state\n  const [settings, setSettings] = useState({\n    maintenanceMode: false,\n    registrationStatus: true,\n    emailNotifications: true,\n    passwordRequirements: true,\n    twoFactorAuth: false,\n    ipWhitelist: false,\n    autoSaveResults: true,\n    autoModerateStories: false,\n    contentApprovalRequired: true,\n    errorReporting: true,\n    debugMode: false,\n  });\n\n  console.log(\"AdminDashboard rendered, user:\", user);\n  console.log(\"AdminDashboard loading state:\", loading);\n\n  // Check if user is admin\n  if (user?.role !== \"admin\") {\n    console.log(\"User is not admin, showing access denied\");\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <Shield className=\"w-16 h-16 text-red-500 mx-auto mb-4\" />\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n            Access Denied\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            You need admin privileges to access this page.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    console.log(\"AdminDashboard useEffect triggered\");\n    console.log(\"User:\", user);\n    console.log(\"User role:\", user?.role);\n    console.log(\"Quiz data state:\", quizData);\n\n    // Only fetch data if user is authenticated and data is not already loaded\n    if (user && user.role === \"admin\") {\n      // Sequential loading to prevent overwhelming the server\n      const loadData = async () => {\n        try {\n          if (!dashboardData) {\n            console.log(\"Fetching dashboard data...\");\n            await fetchDashboardData();\n          }\n          if (users.length === 0) {\n            console.log(\"Fetching users...\");\n            await fetchUsers();\n          }\n          // Always fetch quiz data on component load for admin users\n          console.log(\"Fetching quiz data on component load...\");\n          await fetchQuizData();\n        } catch (error) {\n          console.error(\"Error loading admin dashboard data:\", error);\n          // Don't show toast here, let individual functions handle their own errors\n        }\n      };\n\n      loadData();\n    }\n  }, [user]); // Add user as dependency\n\n  // Auto-refresh quiz data every 60 seconds when quiz tab is active (reduced frequency)\n  useEffect(() => {\n    if (activeTab === \"quiz\") {\n      // Fetch quiz data immediately when quiz tab is accessed\n      if (!quizData) {\n        console.log(\"Quiz tab accessed, fetching quiz data...\");\n        fetchQuizData();\n      }\n\n      const interval = setInterval(() => {\n        console.log(\"Auto-refreshing quiz data...\");\n        fetchQuizData(true); // Force refresh for auto-refresh\n      }, 60000); // 60 seconds (reduced from 30 seconds)\n\n      return () => clearInterval(interval);\n    }\n  }, [activeTab, quizData]);\n\n  const fetchDashboardData = async (forceRefresh = false) => {\n    // Simple cache: only fetch if data is older than 30 seconds or force refresh\n    const now = Date.now();\n    const cacheTime = 30 * 1000; // 30 seconds\n    if (\n      !forceRefresh &&\n      lastFetchTime &&\n      now - lastFetchTime < cacheTime &&\n      dashboardData\n    ) {\n      console.log(\"Using cached dashboard data\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null); // Clear any previous errors\n      console.log(\"Fetching dashboard data...\");\n\n      // Add timeout to prevent hanging requests\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => reject(new Error(\"Request timeout\")), 15000); // 15 second timeout\n      });\n\n      const response = await Promise.race([\n        apiService.getAdminDashboard(),\n        timeoutPromise,\n      ]);\n\n      console.log(\"Dashboard data response:\", response.data);\n\n      if (response.data.success) {\n        setDashboardData(response.data.data);\n        setLastFetchTime(now);\n        setError(null); // Clear any previous errors\n      } else {\n        throw new Error(\n          response.data.message || \"Failed to fetch dashboard data\"\n        );\n      }\n    } catch (error) {\n      console.error(\"Error fetching dashboard data:\", error);\n      let errorMessage = \"Failed to load dashboard data\";\n\n      if (error.response?.status === 401) {\n        errorMessage = \"Authentication required. Please login again.\";\n      } else if (error.response?.status === 403) {\n        errorMessage = \"Access denied. Admin privileges required.\";\n      } else if (error.response?.status === 503) {\n        errorMessage =\n          \"Database not connected. Please ensure MongoDB is running and properly configured.\";\n      } else if (error.response?.data?.message) {\n        errorMessage = error.response.data.message;\n      } else if (\n        error.code === \"ECONNABORTED\" ||\n        error.message === \"Request timeout\"\n      ) {\n        errorMessage = \"Request timed out. Please try again.\";\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchUsers = async (page = 1, search = \"\", role = \"\", status = \"\") => {\n    try {\n      setLoading(true);\n      setError(null); // Clear any previous errors\n      console.log(\"Fetching users...\");\n      const params = {\n        page,\n        limit: 10,\n        ...(search && { search }),\n        ...(role && { role }),\n        ...(status && { status }),\n      };\n\n      // Add timeout to prevent hanging requests\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => reject(new Error(\"Request timeout\")), 15000); // 15 second timeout\n      });\n\n      const response = await Promise.race([\n        apiService.getAdminUsers(params),\n        timeoutPromise,\n      ]);\n\n      console.log(\"Users data response:\", response.data);\n\n      if (response.data.success) {\n        setUsers(response.data.data.users);\n        setPagination(response.data.data.pagination);\n        setError(null); // Clear any previous errors\n      } else {\n        throw new Error(response.data.message || \"Failed to fetch users data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n      let errorMessage = \"Failed to load users data\";\n\n      if (error.response?.status === 401) {\n        errorMessage = \"Authentication required. Please login again.\";\n      } else if (error.response?.status === 403) {\n        errorMessage = \"Access denied. Admin privileges required.\";\n      } else if (error.response?.status === 503) {\n        errorMessage =\n          \"Database not connected. Please ensure MongoDB is running and properly configured.\";\n      } else if (error.response?.data?.message) {\n        errorMessage = error.response.data.message;\n      } else if (\n        error.code === \"ECONNABORTED\" ||\n        error.message === \"Request timeout\"\n      ) {\n        errorMessage = \"Request timed out. Please try again.\";\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = () => {\n    setCurrentPage(1);\n    fetchUsers(1, searchTerm, roleFilter, statusFilter);\n  };\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n    fetchUsers(newPage, searchTerm, roleFilter, statusFilter);\n  };\n\n  const fetchQuizData = async (forceRefresh = false) => {\n    try {\n      setQuizLoading(true);\n      console.log(\n        \"Fetching quiz data...\",\n        forceRefresh ? \"(Force refresh)\" : \"\"\n      );\n      console.log(\n        \"API service getAdminQuizData function:\",\n        apiService.getAdminQuizData\n      );\n\n      // Add cache busting parameter for force refresh\n      const response = await apiService.getAdminQuizData(forceRefresh);\n      console.log(\"Quiz data response:\", response.data);\n      console.log(\"Quiz data response status:\", response.status);\n      console.log(\"Quiz data response success:\", response.data.success);\n\n      if (response.data.success && response.data.data) {\n        const backendData = response.data.data;\n\n        // Map backend data structure to frontend expected structure\n        const mappedData = {\n          totalQuizzes: backendData.totalQuizzes || 0,\n          guestQuizzes: backendData.guestQuizzes || 0,\n          authenticatedQuizzes: backendData.authenticatedQuizzes || 0,\n          personalityDistribution: {\n            analytical: backendData.personalityDistribution?.Analyst || 0,\n            creative: backendData.personalityDistribution?.Creator || 0,\n            social: backendData.personalityDistribution?.Helper || 0,\n            leadership: backendData.personalityDistribution?.Leader || 0,\n            explorer: backendData.personalityDistribution?.Explorer || 0,\n          },\n          recentQuizzes: backendData.recentQuizzes || [],\n          averageCompletionTime:\n            backendData.quizStats?.averageCompletionTime || 0,\n          totalAnswers: backendData.quizStats?.totalAnswers || 0,\n          mostCommonPersonality:\n            backendData.quizStats?.mostCommonPersonality || \"analytical\",\n        };\n\n        console.log(\"Mapped quiz data:\", mappedData);\n        console.log(\"Setting quiz data state...\");\n        setQuizData(mappedData);\n        setLastQuizRefresh(new Date());\n        console.log(\"Quiz data state set successfully\");\n\n        // Show success message for manual refresh\n        if (forceRefresh) {\n          setSuccessMessage(\"✅ Quiz data refreshed successfully!\");\n          setShowSuccessPopup(true);\n          setTimeout(() => {\n            setShowSuccessPopup(false);\n          }, 3000);\n        }\n      } else {\n        throw new Error(\"Invalid response format\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching quiz data:\", error);\n\n      // Show error message for manual refresh\n      if (forceRefresh) {\n        setSuccessMessage(\"❌ Failed to refresh quiz data. Please try again.\");\n        setShowSuccessPopup(true);\n        setTimeout(() => {\n          setShowSuccessPopup(false);\n        }, 3000);\n      }\n\n      // Only reset data if this is the initial load, not a refresh\n      if (!forceRefresh) {\n        setQuizData({\n          totalQuizzes: 0,\n          guestQuizzes: 0,\n          authenticatedQuizzes: 0,\n          personalityDistribution: {\n            analytical: 0,\n            creative: 0,\n            social: 0,\n            leadership: 0,\n            explorer: 0,\n          },\n          recentQuizzes: [],\n          averageCompletionTime: 0,\n          totalAnswers: 0,\n          mostCommonPersonality: \"analytical\",\n        });\n      }\n    } finally {\n      setQuizLoading(false);\n    }\n  };\n\n  const handleUserStatusUpdate = async (userId, isActive) => {\n    try {\n      await apiService.updateUserStatus(userId, { isActive });\n      // Refresh users list\n      fetchUsers(currentPage, searchTerm, roleFilter, statusFilter);\n    } catch (error) {\n      console.error(\"Error updating user status:\", error);\n    }\n  };\n\n  const handleCreateUser = async (e) => {\n    e.preventDefault();\n\n    // Validate form\n    const errors = {};\n    if (!createUserForm.name.trim()) {\n      errors.name = \"Name is required\";\n    }\n    if (!createUserForm.email.trim()) {\n      errors.email = \"Email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(createUserForm.email)) {\n      errors.email = \"Please enter a valid email\";\n    }\n    if (!createUserForm.password) {\n      errors.password = \"Password is required\";\n    } else if (createUserForm.password.length < 6) {\n      errors.password = \"Password must be at least 6 characters\";\n    }\n    if (createUserForm.password !== createUserForm.confirmPassword) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n    if (!createUserForm.role) {\n      errors.role = \"Role is required\";\n    }\n\n    setCreateUserErrors(errors);\n    if (Object.keys(errors).length > 0) {\n      return;\n    }\n\n    setCreateUserLoading(true);\n    try {\n      const response = await apiService.createUser({\n        name: createUserForm.name,\n        email: createUserForm.email,\n        password: createUserForm.password,\n        role: createUserForm.role,\n      });\n\n      if (response.data.success) {\n        setShowCreateUserModal(false);\n        setCreateUserForm({\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          role: \"student\",\n        });\n        setCreateUserErrors({});\n\n        // Refresh users list\n        fetchUsers(currentPage, searchTerm, roleFilter, statusFilter);\n\n        // Show success message\n        setSuccessMessage(\"✅ User created successfully!\");\n        setShowSuccessPopup(true);\n        setTimeout(() => {\n          setShowSuccessPopup(false);\n        }, 3000);\n      } else {\n        setCreateUserErrors({\n          general: response.data.message || \"Failed to create user\",\n        });\n      }\n    } catch (error) {\n      console.error(\"Error creating user:\", error);\n      setCreateUserErrors({\n        general:\n          error.response?.data?.message ||\n          \"Failed to create user. Please try again.\",\n      });\n    } finally {\n      setCreateUserLoading(false);\n    }\n  };\n\n  // Password reset functions\n  const handlePasswordReset = (user) => {\n    console.log(\"Opening password reset modal for user:\", user);\n    console.log(\"User ID:\", user.id);\n    console.log(\"User _id:\", user._id);\n    setSelectedUser(user);\n    setNewPassword(\"\");\n    setConfirmPassword(\"\");\n    setShowPassword(false);\n    setShowConfirmPassword(false);\n    setPasswordResetModal(true);\n  };\n\n  const handlePasswordResetSubmit = async () => {\n    if (!newPassword || newPassword.length < 6) {\n      setSuccessMessage(\"❌ Password must be at least 6 characters long\");\n      setShowSuccessPopup(true);\n      setTimeout(() => setShowSuccessPopup(false), 3000);\n      return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      setSuccessMessage(\"❌ Passwords do not match\");\n      setShowSuccessPopup(true);\n      setTimeout(() => setShowSuccessPopup(false), 3000);\n      return;\n    }\n\n    setPasswordResetLoading(true);\n    try {\n      console.log(\"Attempting password reset for user:\", selectedUser);\n      console.log(\"User ID:\", selectedUser.id);\n      console.log(\"New password:\", newPassword);\n      console.log(\"Auth token:\", localStorage.getItem(\"authToken\"));\n\n      // Test the API call manually\n      const endpoint = `/admin/users/${selectedUser.id}/password`;\n      console.log(\"API endpoint:\", endpoint);\n      console.log(\"Request data:\", { newPassword });\n\n      const response = await apiService.resetUserPassword(selectedUser.id, {\n        newPassword,\n      });\n      console.log(\"Password reset response:\", response);\n\n      // Show success popup\n      setSuccessMessage(\n        `Password reset successfully for ${selectedUser.name}!`\n      );\n      setShowSuccessPopup(true);\n\n      // Close password reset modal\n      setPasswordResetModal(false);\n      setSelectedUser(null);\n      setNewPassword(\"\");\n      setConfirmPassword(\"\");\n      setShowPassword(false);\n      setShowConfirmPassword(false);\n\n      // Auto-hide success popup after 3 seconds\n      setTimeout(() => {\n        setShowSuccessPopup(false);\n      }, 3000);\n    } catch (error) {\n      console.error(\"Error resetting password:\", error);\n      console.error(\"Error details:\", error.response?.data);\n      console.error(\"Error status:\", error.response?.status);\n      console.error(\"Error message:\", error.message);\n      console.error(\"Full error object:\", error);\n\n      let errorMessage = \"Failed to reset password. Please try again.\";\n      if (error.response?.data?.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n\n      // Show error popup\n      setSuccessMessage(`❌ ${errorMessage}`);\n      setShowSuccessPopup(true);\n\n      // Auto-hide error popup after 4 seconds\n      setTimeout(() => {\n        setShowSuccessPopup(false);\n      }, 4000);\n    } finally {\n      setPasswordResetLoading(false);\n    }\n  };\n\n  // Delete user functions\n  const handleDeleteUser = (user) => {\n    setUserToDelete(user);\n    setAdminPassword(\"\");\n    setDeleteUserModal(true);\n  };\n\n  const handleDeleteUserSubmit = async () => {\n    if (!adminPassword) {\n      setSuccessMessage(\"❌ Admin password is required\");\n      setShowSuccessPopup(true);\n      setTimeout(() => setShowSuccessPopup(false), 3000);\n      return;\n    }\n\n    setDeleteUserLoading(true);\n    try {\n      await apiService.deleteUser(userToDelete.id, { adminPassword });\n\n      // Show success popup\n      setSuccessMessage(`User ${userToDelete.name} deleted successfully!`);\n      setShowSuccessPopup(true);\n\n      // Close delete modal\n      setDeleteUserModal(false);\n      setUserToDelete(null);\n      setAdminPassword(\"\");\n\n      // Refresh users list\n      fetchUsers();\n\n      // Auto-hide success popup after 3 seconds\n      setTimeout(() => {\n        setShowSuccessPopup(false);\n      }, 3000);\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      console.error(\"Error details:\", error.response?.data);\n      console.error(\"Error status:\", error.response?.status);\n      console.error(\"Error message:\", error.message);\n      console.error(\"Full error object:\", error);\n\n      let errorMessage = \"Failed to delete user. Please try again.\";\n      if (error.response?.data?.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n\n      // Show error popup\n      setSuccessMessage(`❌ ${errorMessage}`);\n      setShowSuccessPopup(true);\n\n      // Auto-hide error popup after 4 seconds\n      setTimeout(() => {\n        setShowSuccessPopup(false);\n      }, 4000);\n    } finally {\n      setDeleteUserLoading(false);\n    }\n  };\n\n  // Optimized refresh - only refresh what's currently visible\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    try {\n      // Refresh only the active tab data in parallel\n      const refreshPromises = [];\n\n      // Always refresh dashboard data\n      refreshPromises.push(fetchDashboardData(true));\n\n      // Only refresh other data if their tabs are active\n      if (activeTab === \"users\" || users.length === 0) {\n        refreshPromises.push(fetchUsers());\n      }\n\n      if (activeTab === \"quiz\" || !quizData) {\n        refreshPromises.push(fetchQuizData(true));\n      }\n\n      // Execute all refreshes in parallel\n      await Promise.allSettled(refreshPromises);\n\n      setSuccessMessage(\"✅ Data refreshed successfully!\");\n      setShowSuccessPopup(true);\n      setTimeout(() => {\n        setShowSuccessPopup(false);\n      }, 3000);\n    } catch (error) {\n      console.error(\"Refresh error:\", error);\n      setSuccessMessage(\"❌ Failed to refresh data. Please try again.\");\n      setShowSuccessPopup(true);\n      setTimeout(() => {\n        setShowSuccessPopup(false);\n      }, 3000);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  // Toggle setting function\n  const toggleSetting = (settingName) => {\n    setSettings((prev) => ({\n      ...prev,\n      [settingName]: !prev[settingName],\n    }));\n  };\n\n  // Toggle Button Component\n  const ToggleButton = ({ isOn, onClick, disabled = false }) => (\n    <button\n      onClick={onClick}\n      disabled={disabled}\n      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors duration-200 ${\n        isOn ? \"bg-green-500\" : \"bg-gray-200 dark:bg-gray-700\"\n      } ${disabled ? \"opacity-50 cursor-not-allowed\" : \"cursor-pointer\"}`}\n    >\n      <span\n        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform duration-200 ${\n          isOn ? \"translate-x-6\" : \"translate-x-1\"\n        }`}\n      />\n    </button>\n  );\n\n  // Skeleton Loading Component\n  const SkeletonCard = ({ className = \"\" }) => (\n    <div\n      className={`bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 animate-pulse ${className}`}\n    >\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex-1\">\n          <div className=\"h-4 bg-gray-200 dark:bg-gray-600 rounded w-20 mb-2\"></div>\n          <div className=\"h-8 bg-gray-200 dark:bg-gray-600 rounded w-16 mb-2\"></div>\n          <div className=\"h-3 bg-gray-200 dark:bg-gray-600 rounded w-24\"></div>\n        </div>\n        <div className=\"w-12 h-12 bg-gray-200 dark:bg-gray-600 rounded-lg\"></div>\n      </div>\n    </div>\n  );\n\n  const SkeletonChart = () => (\n    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 animate-pulse\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"h-6 bg-gray-200 dark:bg-gray-600 rounded w-40\"></div>\n        <div className=\"h-6 bg-gray-200 dark:bg-gray-600 rounded w-8\"></div>\n      </div>\n      <div className=\"h-72 bg-gray-200 dark:bg-gray-600 rounded\"></div>\n    </div>\n  );\n\n  const SkeletonStats = () => (\n    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 animate-pulse\">\n      <div className=\"h-6 bg-gray-200 dark:bg-gray-600 rounded w-32 mb-6\"></div>\n      <div className=\"space-y-4\">\n        {[...Array(6)].map((_, i) => (\n          <div key={i} className=\"flex items-center justify-between\">\n            <div className=\"h-4 bg-gray-200 dark:bg-gray-600 rounded w-24\"></div>\n            <div className=\"h-5 bg-gray-200 dark:bg-gray-600 rounded w-8\"></div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const SkeletonTable = () => (\n    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 animate-pulse\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"h-6 bg-gray-200 dark:bg-gray-600 rounded w-24\"></div>\n        <div className=\"h-4 bg-gray-200 dark:bg-gray-600 rounded w-16\"></div>\n      </div>\n      <div className=\"space-y-4\">\n        {[...Array(5)].map((_, i) => (\n          <div\n            key={i}\n            className=\"flex items-center space-x-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\"\n          >\n            <div className=\"w-10 h-10 bg-gray-200 dark:bg-gray-600 rounded-full\"></div>\n            <div className=\"flex-1\">\n              <div className=\"h-4 bg-gray-200 dark:bg-gray-600 rounded w-32 mb-1\"></div>\n              <div className=\"h-3 bg-gray-200 dark:bg-gray-600 rounded w-48\"></div>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"h-5 bg-gray-200 dark:bg-gray-600 rounded w-16 mb-1\"></div>\n              <div className=\"h-3 bg-gray-200 dark:bg-gray-600 rounded w-20\"></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  // Show loading state with skeleton\n  if (loading) {\n    console.log(\"AdminDashboard showing skeleton loading state\");\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n        {/* Header Skeleton */}\n        <div className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex justify-between items-center py-6\">\n              <div>\n                <div className=\"h-8 bg-gray-200 dark:bg-gray-600 rounded w-48 mb-2 animate-pulse\"></div>\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-600 rounded w-64 animate-pulse\"></div>\n              </div>\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-600 rounded w-20 animate-pulse\"></div>\n                <div className=\"w-5 h-5 bg-gray-200 dark:bg-gray-600 rounded animate-pulse\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          {/* Tabs Skeleton */}\n          <div className=\"mb-8\">\n            <div className=\"border-b border-gray-200 dark:border-gray-700\">\n              <div className=\"-mb-px flex space-x-8\">\n                {[...Array(6)].map((_, i) => (\n                  <div\n                    key={i}\n                    className=\"flex items-center space-x-2 py-2 px-1\"\n                  >\n                    <div className=\"w-4 h-4 bg-gray-200 dark:bg-gray-600 rounded animate-pulse\"></div>\n                    <div className=\"h-4 bg-gray-200 dark:bg-gray-600 rounded w-16 animate-pulse\"></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Overview Tab Skeleton */}\n          <div className=\"space-y-8\">\n            {/* Key Metrics Skeleton */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <SkeletonCard />\n              <SkeletonCard />\n              <SkeletonCard />\n              <SkeletonCard />\n            </div>\n\n            {/* Charts Row Skeleton */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              <SkeletonChart />\n              <SkeletonStats />\n            </div>\n\n            {/* Recent Users Skeleton */}\n            <SkeletonTable />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state\n  if (error && !dashboardData) {\n    console.log(\"AdminDashboard showing error state\");\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center max-w-md\">\n          <AlertCircle className=\"w-16 h-16 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\n            Database Connection Required\n          </h2>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n            The admin dashboard requires a database connection to display\n            real-time data. Please ensure MongoDB is properly configured and\n            running.\n          </p>\n          <div className=\"space-y-2\">\n            <button\n              onClick={() => {\n                setLoading(true);\n                setError(null);\n                fetchDashboardData();\n                fetchUsers();\n              }}\n              className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 mr-2\"\n            >\n              Retry Connection\n            </button>\n            <button\n              onClick={() => {\n                setError(null);\n                setDashboardData({\n                  userStats: {\n                    totalUsers: 0,\n                    activeUsers: 0,\n                    adminUsers: 0,\n                    studentUsers: 0,\n                    newUsersThisMonth: 0,\n                    newUsersToday: 0,\n                  },\n                  userGrowth: [],\n                  platformStats: {},\n                  engagementData: [],\n                  deviceData: [],\n                  recentActivities: [],\n                  recentUsers: [],\n                });\n              }}\n              className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700\"\n            >\n              Continue with Demo Data\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const tabs = [\n    { id: \"overview\", name: \"Overview\", icon: BarChart3 },\n    { id: \"users\", name: \"Users\", icon: Users },\n    { id: \"quiz\", name: \"Quiz Data\", icon: Target },\n    { id: \"analytics\", name: \"Analytics\", icon: TrendingUp },\n    { id: \"content\", name: \"Content\", icon: BookOpen },\n    { id: \"settings\", name: \"Settings\", icon: Settings },\n  ];\n\n  // Main dashboard content\n  console.log(\"AdminDashboard rendering main content\");\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-6\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                Admin Dashboard\n              </h1>\n              <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n                Welcome back, {user?.name}! Here's what's happening today.\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={handleRefresh}\n                disabled={refreshing}\n                className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg transition-colors duration-200\"\n              >\n                <svg\n                  className={`w-4 h-4 ${refreshing ? \"animate-spin\" : \"\"}`}\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                  />\n                </svg>\n                <span className=\"text-sm font-medium\">\n                  {refreshing ? \"Refreshing...\" : \"Refresh Data\"}\n                </span>\n              </button>\n              <div className=\"flex items-center space-x-2\">\n                <Calendar className=\"w-4 h-4 text-gray-400\" />\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  {new Date().toLocaleDateString()}\n                </span>\n              </div>\n              <button className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\">\n                <Bell className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Tabs */}\n        <div className=\"mb-8\">\n          <div className=\"border-b border-gray-200 dark:border-gray-700\">\n            <nav className=\"-mb-px flex space-x-8\">\n              {tabs.map((tab) => (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? \"border-primary-500 text-primary-600 dark:text-primary-400\"\n                      : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300\"\n                  }`}\n                >\n                  <tab.icon className=\"w-4 h-4\" />\n                  <span>{tab.name}</span>\n                </button>\n              ))}\n            </nav>\n          </div>\n        </div>\n\n        {/* Overview Tab */}\n        {activeTab === \"overview\" && dashboardData && (\n          <div className=\"space-y-8\">\n            {/* Key Metrics */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                      Total Users\n                    </p>\n                    <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                      {dashboardData.userStats?.totalUsers || 0}\n                    </p>\n                    <p className=\"text-sm text-green-600 dark:text-green-400 flex items-center mt-1\">\n                      <TrendingUp className=\"w-3 h-3 mr-1\" />+\n                      {dashboardData.userStats?.newUsersThisMonth || 0} this\n                      month\n                    </p>\n                  </div>\n                  <div className=\"p-3 bg-blue-100 dark:bg-blue-900 rounded-lg\">\n                    <Users className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                      Active Users\n                    </p>\n                    <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                      {dashboardData.userStats?.activeUsers || 0}\n                    </p>\n                    <p className=\"text-sm text-green-600 dark:text-green-400 flex items-center mt-1\">\n                      <Activity className=\"w-3 h-3 mr-1\" />\n                      {Math.round(\n                        (dashboardData.userStats?.activeUsers /\n                          dashboardData.userStats?.totalUsers) *\n                          100\n                      ) || 0}\n                      % of total\n                    </p>\n                  </div>\n                  <div className=\"p-3 bg-green-100 dark:bg-green-900 rounded-lg\">\n                    <Activity className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                      New Today\n                    </p>\n                    <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                      {dashboardData.userStats?.newUsersToday || 0}\n                    </p>\n                    <p className=\"text-sm text-purple-600 dark:text-purple-400 flex items-center mt-1\">\n                      <Zap className=\"w-3 h-3 mr-1\" />\n                      New registrations\n                    </p>\n                  </div>\n                  <div className=\"p-3 bg-purple-100 dark:bg-purple-900 rounded-lg\">\n                    <UserCheck className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                      Total Mentors\n                    </p>\n                    <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                      {dashboardData?.userStats?.mentorUsers || 0}\n                    </p>\n                    <p className=\"text-sm text-purple-600 dark:text-purple-400 flex items-center mt-1\">\n                      <Users className=\"w-3 h-3 mr-1\" />\n                      Active mentors in the system\n                    </p>\n                  </div>\n                  <div className=\"p-3 bg-purple-100 dark:bg-purple-900 rounded-lg\">\n                    <Users className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Charts Row */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* User Growth Chart */}\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    User Growth (6 Months)\n                  </h3>\n                  <div className=\"flex items-center space-x-2\">\n                    <button className=\"px-3 py-1 text-xs bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full\">\n                      6M\n                    </button>\n                  </div>\n                </div>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <AreaChart data={dashboardData.userGrowth || []}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"month\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Area\n                      type=\"monotone\"\n                      dataKey=\"users\"\n                      stackId=\"1\"\n                      stroke=\"#3B82F6\"\n                      fill=\"#3B82F6\"\n                      fillOpacity={0.6}\n                    />\n                    <Area\n                      type=\"monotone\"\n                      dataKey=\"active\"\n                      stackId=\"2\"\n                      stroke=\"#10B981\"\n                      fill=\"#10B981\"\n                      fillOpacity={0.6}\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n\n              {/* Platform Stats */}\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">\n                  Platform Statistics\n                </h3>\n                <div className=\"space-y-4\">\n                  {dashboardData.platformStats &&\n                    Object.entries(dashboardData.platformStats).map(\n                      ([key, value]) => (\n                        <div\n                          key={key}\n                          className=\"flex items-center justify-between\"\n                        >\n                          <span className=\"text-sm text-gray-600 dark:text-gray-400 capitalize\">\n                            {key.replace(/([A-Z])/g, \" $1\").trim()}\n                          </span>\n                          <span className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                            {value}\n                          </span>\n                        </div>\n                      )\n                    )}\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Users */}\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Recent Users\n                </h3>\n                <button className=\"text-sm text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300\">\n                  View all\n                </button>\n              </div>\n              <div className=\"space-y-4\">\n                {dashboardData.recentUsers?.slice(0, 5).map((user) => (\n                  <div\n                    key={user.id}\n                    className=\"flex items-center space-x-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\"\n                  >\n                    <div className=\"w-10 h-10 bg-primary-100 dark:bg-primary-900 rounded-full flex items-center justify-center\">\n                      <span className=\"text-primary-600 dark:text-primary-400 font-medium\">\n                        {user.name.charAt(0).toUpperCase()}\n                      </span>\n                    </div>\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm text-gray-900 dark:text-white font-medium\">\n                        {user.name}\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {user.email}\n                      </p>\n                    </div>\n                    <div className=\"text-right\">\n                      <span\n                        className={`px-2 py-1 text-xs rounded-full ${\n                          user.role === \"admin\"\n                            ? \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\"\n                            : user.role === \"mentor\"\n                            ? \"bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200\"\n                            : \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\"\n                        }`}\n                      >\n                        {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n                      </span>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                        {new Date(user.createdAt).toLocaleDateString()}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Users Tab */}\n        {activeTab === \"users\" && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                User Management\n              </h3>\n              <div className=\"flex items-center space-x-4\">\n                <button\n                  onClick={() => setShowCreateUserModal(true)}\n                  className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg transition-colors duration-200\"\n                >\n                  <Plus className=\"w-4 h-4\" />\n                  <span>Create Account</span>\n                </button>\n                <button\n                  onClick={() =>\n                    fetchUsers(\n                      currentPage,\n                      searchTerm,\n                      roleFilter,\n                      statusFilter\n                    )\n                  }\n                  className=\"flex items-center space-x-2 px-3 py-2 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-lg transition-colors duration-200\"\n                >\n                  <svg\n                    className=\"w-4 h-4\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n                    />\n                  </svg>\n                  <span className=\"text-sm\">Refresh</span>\n                </button>\n                <div className=\"relative\">\n                  <Search className=\"w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search users...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  />\n                </div>\n                <select\n                  value={roleFilter}\n                  onChange={(e) => setRoleFilter(e.target.value)}\n                  className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                >\n                  <option value=\"\">All Roles</option>\n                  <option value=\"admin\">Admin</option>\n                  <option value=\"mentor\">Mentor</option>\n                  <option value=\"student\">Student</option>\n                </select>\n                <select\n                  value={statusFilter}\n                  onChange={(e) => setStatusFilter(e.target.value)}\n                  className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                >\n                  <option value=\"\">All Status</option>\n                  <option value=\"active\">Active</option>\n                  <option value=\"inactive\">Inactive</option>\n                </select>\n                <button\n                  onClick={handleSearch}\n                  className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700\"\n                >\n                  Search\n                </button>\n              </div>\n            </div>\n\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                  <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                        User\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                        Role\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                        Status\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                        Last Login\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                        Actions\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                    {users.map((user) => (\n                      <tr\n                        key={user.id}\n                        className=\"hover:bg-gray-50 dark:hover:bg-gray-700\"\n                      >\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center\">\n                            <div className=\"w-10 h-10 bg-primary-100 dark:bg-primary-900 rounded-full flex items-center justify-center\">\n                              <span className=\"text-primary-600 dark:text-primary-400 font-medium\">\n                                {user.name.charAt(0).toUpperCase()}\n                              </span>\n                            </div>\n                            <div className=\"ml-4\">\n                              <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                                {user.name}\n                              </div>\n                              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                                {user.email}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span\n                            className={`px-2 py-1 text-xs rounded-full ${\n                              user.role === \"admin\"\n                                ? \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\"\n                                : user.role === \"mentor\"\n                                ? \"bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200\"\n                                : \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\"\n                            }`}\n                          >\n                            {user.role.charAt(0).toUpperCase() +\n                              user.role.slice(1)}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center\">\n                            <div\n                              className={`w-2 h-2 rounded-full mr-2 ${\n                                user.isActive ? \"bg-green-400\" : \"bg-gray-400\"\n                              }`}\n                            ></div>\n                            <span className=\"text-sm text-gray-900 dark:text-white capitalize\">\n                              {user.isActive ? \"Active\" : \"Inactive\"}\n                            </span>\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                          {user.lastLogin\n                            ? new Date(user.lastLogin).toLocaleDateString()\n                            : \"Never\"}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                          <div className=\"flex items-center space-x-2\">\n                            {user.role !== \"admin\" && (\n                              <button\n                                onClick={() => handleDeleteUser(user)}\n                                className=\"px-2 py-1 text-xs rounded bg-red-100 text-red-800 hover:bg-red-200 dark:bg-red-900 dark:text-red-200\"\n                              >\n                                Delete\n                              </button>\n                            )}\n                            <button\n                              onClick={() => handlePasswordReset(user)}\n                              className=\"px-2 py-1 text-xs rounded bg-blue-100 text-blue-800 hover:bg-blue-200 dark:bg-blue-900 dark:text-blue-200\"\n                            >\n                              Reset Password\n                            </button>\n                            <button className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\">\n                              <MoreHorizontal className=\"w-4 h-4\" />\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            {/* Pagination */}\n            {pagination && (\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-sm text-gray-700 dark:text-gray-300\">\n                  Showing {(pagination.currentPage - 1) * 10 + 1} to{\" \"}\n                  {Math.min(pagination.currentPage * 10, pagination.totalUsers)}{\" \"}\n                  of {pagination.totalUsers} results\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <button\n                    onClick={() => handlePageChange(currentPage - 1)}\n                    disabled={!pagination.hasPrev}\n                    className=\"px-3 py-1 text-sm border border-gray-300 dark:border-gray-600 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    Previous\n                  </button>\n                  <span className=\"px-3 py-1 text-sm bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-lg\">\n                    {pagination.currentPage}\n                  </span>\n                  <button\n                    onClick={() => handlePageChange(currentPage + 1)}\n                    disabled={!pagination.hasNext}\n                    className=\"px-3 py-1 text-sm border border-gray-300 dark:border-gray-600 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    Next\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Quiz Data Tab */}\n        {activeTab === \"quiz\" && (\n          <div className=\"space-y-8\">\n            {quizLoading ? (\n              <>\n                {/* Quiz Statistics Cards Skeleton */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                  <SkeletonCard />\n                  <SkeletonCard />\n                  <SkeletonCard />\n                  <SkeletonCard />\n                </div>\n\n                {/* Charts Row Skeleton */}\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                  <SkeletonChart />\n                  <SkeletonChart />\n                </div>\n\n                {/* Insights Cards Skeleton */}\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <SkeletonCard />\n                  <SkeletonCard />\n                  <SkeletonCard />\n                </div>\n\n                {/* Table Skeleton */}\n                <SkeletonTable />\n              </>\n            ) : (\n              <>\n                {/* Quiz Data Header */}\n                <div className=\"flex items-center justify-between mb-6\">\n                  <div>\n                    <h3 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\n                      Quiz Analytics\n                    </h3>\n                    <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n                      Track quiz submissions and user engagement\n                    </p>\n                    {!quizData && !quizLoading && (\n                      <p className=\"text-sm text-orange-600 dark:text-orange-400 mt-1\">\n                        No quiz data loaded. Click \"Load Data\" to fetch quiz\n                        statistics.\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"flex flex-col items-end space-y-2\">\n                    <button\n                      onClick={() => fetchQuizData(true)}\n                      disabled={quizLoading}\n                      className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                    >\n                      {quizLoading ? (\n                        <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                      ) : (\n                        <RefreshCw className=\"w-4 h-4\" />\n                      )}\n                      <span>\n                        {quizLoading\n                          ? \"Refreshing...\"\n                          : !quizData\n                          ? \"Load Data\"\n                          : \"Refresh Data\"}\n                      </span>\n                    </button>\n                    {lastQuizRefresh && (\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Last updated: {lastQuizRefresh.toLocaleTimeString()}\n                        {quizLoading && (\n                          <span className=\"ml-2 text-primary-600 dark:text-primary-400\">\n                            • Refreshing...\n                          </span>\n                        )}\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                {/* Quiz Statistics Cards */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                  <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                          Total Quizzes\n                        </p>\n                        <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                          {quizLoading ? (\n                            <div className=\"w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n                          ) : (\n                            <span\n                              onClick={() =>\n                                console.log(\"Current quizData:\", quizData)\n                              }\n                            >\n                              {quizData?.totalQuizzes || 0}\n                            </span>\n                          )}\n                        </p>\n                        <p className=\"text-sm text-blue-600 dark:text-blue-400 flex items-center mt-1\">\n                          <Target className=\"w-3 h-3 mr-1\" />\n                          All submissions\n                        </p>\n                      </div>\n                      <div className=\"p-3 bg-blue-100 dark:bg-blue-900 rounded-lg\">\n                        <Target className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                          Detailed Quizzes\n                        </p>\n                        <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                          {quizData?.authenticatedQuizzes || 0}\n                        </p>\n                        <p className=\"text-sm text-green-600 dark:text-green-400 flex items-center mt-1\">\n                          <UserCheck className=\"w-3 h-3 mr-1\" />\n                          Logged-in users\n                        </p>\n                      </div>\n                      <div className=\"p-3 bg-green-100 dark:bg-green-900 rounded-lg\">\n                        <UserCheck className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                          Mock Quizzes\n                        </p>\n                        <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                          {quizData?.guestQuizzes || 0}\n                        </p>\n                        <p className=\"text-sm text-purple-600 dark:text-purple-400 flex items-center mt-1\">\n                          <Users className=\"w-3 h-3 mr-1\" />\n                          Guest users\n                        </p>\n                      </div>\n                      <div className=\"p-3 bg-purple-100 dark:bg-purple-900 rounded-lg\">\n                        <Users className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                          Avg. Time\n                        </p>\n                        <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                          {Math.round(quizData?.averageCompletionTime || 0)}s\n                        </p>\n                        <p className=\"text-sm text-orange-600 dark:text-orange-400 flex items-center mt-1\">\n                          <Clock className=\"w-3 h-3 mr-1\" />\n                          Completion time\n                        </p>\n                      </div>\n                      <div className=\"p-3 bg-orange-100 dark:bg-orange-900 rounded-lg\">\n                        <Clock className=\"w-6 h-6 text-orange-600 dark:text-orange-400\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Charts Row */}\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                  {/* Personality Distribution Chart */}\n                  <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">\n                      Personality Distribution\n                    </h3>\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <RechartsPieChart>\n                        <Pie\n                          data={[\n                            {\n                              name: \"Analytical\",\n                              value:\n                                quizData?.personalityDistribution?.analytical ||\n                                0,\n                              color: \"#3B82F6\",\n                            },\n                            {\n                              name: \"Creative\",\n                              value:\n                                quizData?.personalityDistribution?.creative ||\n                                0,\n                              color: \"#8B5CF6\",\n                            },\n                            {\n                              name: \"Social\",\n                              value:\n                                quizData?.personalityDistribution?.social || 0,\n                              color: \"#10B981\",\n                            },\n                            {\n                              name: \"Leadership\",\n                              value:\n                                quizData?.personalityDistribution?.leadership ||\n                                0,\n                              color: \"#F59E0B\",\n                            },\n                          ]}\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          labelLine={false}\n                          label={({ name, percent }) =>\n                            `${name} ${(percent * 100).toFixed(0)}%`\n                          }\n                          outerRadius={80}\n                          fill=\"#8884d8\"\n                          dataKey=\"value\"\n                        >\n                          {[\n                            {\n                              name: \"Analytical\",\n                              value:\n                                quizData?.personalityDistribution?.analytical ||\n                                0,\n                              color: \"#3B82F6\",\n                            },\n                            {\n                              name: \"Creative\",\n                              value:\n                                quizData?.personalityDistribution?.creative ||\n                                0,\n                              color: \"#8B5CF6\",\n                            },\n                            {\n                              name: \"Social\",\n                              value:\n                                quizData?.personalityDistribution?.social || 0,\n                              color: \"#10B981\",\n                            },\n                            {\n                              name: \"Leadership\",\n                              value:\n                                quizData?.personalityDistribution?.leadership ||\n                                0,\n                              color: \"#F59E0B\",\n                            },\n                          ].map((entry, index) => (\n                            <Cell key={`cell-${index}`} fill={entry.color} />\n                          ))}\n                        </Pie>\n                        <Tooltip />\n                        <Legend />\n                      </RechartsPieChart>\n                    </ResponsiveContainer>\n                  </div>\n\n                  {/* Quiz Type Distribution */}\n                  <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">\n                      Quiz Type Distribution\n                    </h3>\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <BarChart\n                        data={[\n                          {\n                            name: \"Mock Quiz\",\n                            value: quizData?.guestQuizzes || 0,\n                            fill: \"#3B82F6\",\n                          },\n                          {\n                            name: \"Detailed Quiz\",\n                            value: quizData?.authenticatedQuizzes || 0,\n                            fill: \"#10B981\",\n                          },\n                        ]}\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Bar dataKey=\"value\" fill=\"#3B82F6\" />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </div>\n                </div>\n\n                {/* Additional Analysis Charts */}\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                  {/* Personality Scores Breakdown */}\n                  <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">\n                      Personality Scores Breakdown\n                    </h3>\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <BarChart\n                        data={[\n                          {\n                            name: \"Analytical\",\n                            score:\n                              quizData?.personalityDistribution?.analytical ||\n                              0,\n                          },\n                          {\n                            name: \"Creative\",\n                            score:\n                              quizData?.personalityDistribution?.creative || 0,\n                          },\n                          {\n                            name: \"Social\",\n                            score:\n                              quizData?.personalityDistribution?.social || 0,\n                          },\n                          {\n                            name: \"Leadership\",\n                            score:\n                              quizData?.personalityDistribution?.leadership ||\n                              0,\n                          },\n                        ]}\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Bar dataKey=\"score\" fill=\"#8B5CF6\" />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </div>\n\n                  {/* Completion Time Analysis */}\n                  <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">\n                      Completion Time Analysis\n                    </h3>\n                    <ResponsiveContainer width=\"100%\" height={200}>\n                      <AreaChart\n                        data={[\n                          {\n                            name: \"Mock Quiz\",\n                            time: quizData?.averageCompletionTime\n                              ? Math.round(quizData.averageCompletionTime * 0.6)\n                              : 120,\n                          },\n                          {\n                            name: \"Detailed Quiz\",\n                            time: quizData?.averageCompletionTime || 300,\n                          },\n                        ]}\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis\n                          label={{\n                            value: \"Seconds\",\n                            angle: -90,\n                            position: \"insideLeft\",\n                          }}\n                        />\n                        <Tooltip\n                          formatter={(value) => [`${value}s`, \"Avg. Time\"]}\n                        />\n                        <Area\n                          type=\"monotone\"\n                          dataKey=\"time\"\n                          stroke=\"#F59E0B\"\n                          fill=\"#F59E0B\"\n                          fillOpacity={0.6}\n                        />\n                      </AreaChart>\n                    </ResponsiveContainer>\n                  </div>\n                </div>\n\n                {/* Quiz Insights Cards */}\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                      Key Insights\n                    </h3>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                        <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                          Most Common Personality\n                        </span>\n                        <span className=\"text-sm font-semibold text-gray-900 dark:text-white capitalize\">\n                          {quizData?.mostCommonPersonality || \"N/A\"}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                        <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                          Total Answers\n                        </span>\n                        <span className=\"text-sm font-semibold text-gray-900 dark:text-white\">\n                          {quizData?.totalAnswers || 0}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                        <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                          Completion Rate\n                        </span>\n                        <span className=\"text-sm font-semibold text-gray-900 dark:text-white\">\n                          {quizData?.totalQuizzes > 0 ? \"100%\" : \"0%\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                      User Engagement\n                    </h3>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                        <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                          Guest Participation\n                        </span>\n                        <span className=\"text-sm font-semibold text-gray-900 dark:text-white\">\n                          {quizData?.guestQuizzes || 0}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                        <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                          Registered Participation\n                        </span>\n                        <span className=\"text-sm font-semibold text-gray-900 dark:text-white\">\n                          {quizData?.authenticatedQuizzes || 0}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                        <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                          Avg. Time per Quiz\n                        </span>\n                        <span className=\"text-sm font-semibold text-gray-900 dark:text-white\">\n                          {Math.round(quizData?.averageCompletionTime || 0)}s\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                      Popular Choices\n                    </h3>\n                    <div className=\"space-y-3\">\n                      <div className=\"p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm font-medium text-blue-800 dark:text-blue-200\">\n                            Analytical\n                          </span>\n                          <span className=\"text-sm font-bold text-blue-900 dark:text-blue-100\">\n                            {quizData?.personalityDistribution?.analytical || 0}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"p-3 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm font-medium text-purple-800 dark:text-purple-200\">\n                            Creative\n                          </span>\n                          <span className=\"text-sm font-bold text-purple-900 dark:text-purple-100\">\n                            {quizData?.personalityDistribution?.creative || 0}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"p-3 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm font-medium text-green-800 dark:text-green-200\">\n                            Social\n                          </span>\n                          <span className=\"text-sm font-bold text-green-900 dark:text-green-100\">\n                            {quizData?.personalityDistribution?.social || 0}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"p-3 bg-orange-50 dark:bg-orange-900/20 rounded-lg\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm font-medium text-orange-800 dark:text-orange-200\">\n                            Leadership\n                          </span>\n                          <span className=\"text-sm font-bold text-orange-900 dark:text-orange-100\">\n                            {quizData?.personalityDistribution?.leadership || 0}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Recent Quiz Submissions */}\n                <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                  <div className=\"flex items-center justify-between mb-6\">\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                        Recent Quiz Submissions\n                      </h3>\n                      {quizLoading && (\n                        <p className=\"text-xs text-primary-600 dark:text-primary-400 mt-1\">\n                          Updating submissions...\n                        </p>\n                      )}\n                    </div>\n                    <button\n                      onClick={() => fetchQuizData(true)}\n                      disabled={quizLoading}\n                      className=\"text-sm text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 flex items-center disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      {quizLoading ? (\n                        <div className=\"w-4 h-4 border-2 border-primary-600 border-t-transparent rounded-full animate-spin mr-1\" />\n                      ) : (\n                        <RefreshCw className=\"w-4 h-4 mr-1\" />\n                      )}\n                      {quizLoading ? \"Refreshing...\" : \"Refresh\"}\n                    </button>\n                  </div>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                      <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                        <tr>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                            User\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                            Quiz Type\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                            Personality\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                            Completion Time\n                          </th>\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                            Submitted\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                        {quizData?.recentQuizzes?.length > 0 ? (\n                          quizData.recentQuizzes.map((quiz, index) => (\n                            <tr\n                              key={index}\n                              className=\"hover:bg-gray-50 dark:hover:bg-gray-700\"\n                            >\n                              <td className=\"px-6 py-4 whitespace-nowrap\">\n                                <div className=\"flex items-center\">\n                                  <div className=\"w-10 h-10 bg-primary-100 dark:bg-primary-900 rounded-full flex items-center justify-center\">\n                                    <span className=\"text-primary-600 dark:text-primary-400 font-medium\">\n                                      {quiz.userId?.name\n                                        ?.charAt(0)\n                                        .toUpperCase() || \"G\"}\n                                    </span>\n                                  </div>\n                                  <div className=\"ml-4\">\n                                    <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                                      {quiz.userId?.name || \"Guest User\"}\n                                    </div>\n                                    <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                                      {quiz.userId?.email || \"No email\"}\n                                    </div>\n                                  </div>\n                                </div>\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap\">\n                                <span\n                                  className={`px-2 py-1 text-xs rounded-full ${\n                                    quiz.quizType === \"detailed\"\n                                      ? \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\"\n                                      : \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\"\n                                  }`}\n                                >\n                                  {quiz.quizType === \"detailed\"\n                                    ? \"Detailed (15Q)\"\n                                    : \"Mock (5Q)\"}\n                                </span>\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap\">\n                                <span className=\"px-2 py-1 text-xs rounded-full bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200 capitalize\">\n                                  {quiz.personalityType || \"N/A\"}\n                                </span>\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                                {Math.round(quiz.completionTime || 0)}s\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                                {new Date(quiz.createdAt).toLocaleDateString()}\n                              </td>\n                            </tr>\n                          ))\n                        ) : (\n                          <tr>\n                            <td\n                              colSpan=\"5\"\n                              className=\"px-6 py-12 text-center text-gray-500 dark:text-gray-400\"\n                            >\n                              No quiz submissions yet\n                            </td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        )}\n\n        {/* Other tabs */}\n        {activeTab === \"analytics\" && (\n          <div className=\"space-y-8\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n                Advanced Analytics\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Detailed insights and performance metrics\n              </p>\n            </div>\n          </div>\n        )}\n\n        {activeTab === \"content\" && (\n          <div className=\"space-y-8\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n                Content Management\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Manage quizzes, roadmaps, and other content\n              </p>\n            </div>\n          </div>\n        )}\n\n        {activeTab === \"settings\" && (\n          <div className=\"space-y-8\">\n            {/* System Settings Header */}\n            <div className=\"text-center\">\n              <h3 className=\"text-2xl font-semibold text-gray-900 dark:text-white mb-2\">\n                System Settings\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Configure system preferences, security, and platform options\n              </p>\n            </div>\n\n            {/* Settings Categories */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* General Settings */}\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6 flex items-center\">\n                  <Settings className=\"w-5 h-5 mr-2\" />\n                  General Settings\n                </h4>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Platform Name\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Display name for the platform\n                      </p>\n                    </div>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"Praniti\"\n                      className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm w-48\"\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Maintenance Mode\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Temporarily disable public access\n                      </p>\n                    </div>\n                    <ToggleButton\n                      isOn={settings.maintenanceMode}\n                      onClick={() => toggleSetting(\"maintenanceMode\")}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Registration Status\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Allow new user registrations\n                      </p>\n                    </div>\n                    <ToggleButton\n                      isOn={settings.registrationStatus}\n                      onClick={() => toggleSetting(\"registrationStatus\")}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Email Notifications\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Send system notifications via email\n                      </p>\n                    </div>\n                    <ToggleButton\n                      isOn={settings.emailNotifications}\n                      onClick={() => toggleSetting(\"emailNotifications\")}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Security Settings */}\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6 flex items-center\">\n                  <Shield className=\"w-5 h-5 mr-2\" />\n                  Security Settings\n                </h4>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Password Requirements\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Minimum 8 characters, mixed case, numbers\n                      </p>\n                    </div>\n                    <ToggleButton\n                      isOn={settings.passwordRequirements}\n                      onClick={() => toggleSetting(\"passwordRequirements\")}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Two-Factor Authentication\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Require 2FA for admin accounts\n                      </p>\n                    </div>\n                    <ToggleButton\n                      isOn={settings.twoFactorAuth}\n                      onClick={() => toggleSetting(\"twoFactorAuth\")}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Session Timeout\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Auto-logout after inactivity\n                      </p>\n                    </div>\n                    <select className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\">\n                      <option value=\"30\">30 minutes</option>\n                      <option value=\"60\">1 hour</option>\n                      <option value=\"120\">2 hours</option>\n                      <option value=\"480\">8 hours</option>\n                    </select>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        IP Whitelist\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Restrict admin access to specific IPs\n                      </p>\n                    </div>\n                    <ToggleButton\n                      isOn={settings.ipWhitelist}\n                      onClick={() => toggleSetting(\"ipWhitelist\")}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Quiz Settings */}\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6 flex items-center\">\n                  <Target className=\"w-5 h-5 mr-2\" />\n                  Quiz Settings\n                </h4>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Guest Quiz Limit\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Number of questions for guest users\n                      </p>\n                    </div>\n                    <input\n                      type=\"number\"\n                      defaultValue=\"5\"\n                      min=\"1\"\n                      max=\"20\"\n                      className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm w-20\"\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Detailed Quiz Limit\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Number of questions for logged-in users\n                      </p>\n                    </div>\n                    <input\n                      type=\"number\"\n                      defaultValue=\"15\"\n                      min=\"5\"\n                      max=\"50\"\n                      className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm w-20\"\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Quiz Time Limit\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Maximum time per quiz (minutes)\n                      </p>\n                    </div>\n                    <select className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\">\n                      <option value=\"0\">No limit</option>\n                      <option value=\"10\">10 minutes</option>\n                      <option value=\"15\">15 minutes</option>\n                      <option value=\"30\">30 minutes</option>\n                    </select>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Auto-Save Results\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Automatically save quiz results\n                      </p>\n                    </div>\n                    <ToggleButton\n                      isOn={settings.autoSaveResults}\n                      onClick={() => toggleSetting(\"autoSaveResults\")}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Content Settings */}\n              <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n                <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6 flex items-center\">\n                  <BookOpen className=\"w-5 h-5 mr-2\" />\n                  Content Settings\n                </h4>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Auto-Moderate Stories\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Automatically approve user stories\n                      </p>\n                    </div>\n                    <ToggleButton\n                      isOn={settings.autoModerateStories}\n                      onClick={() => toggleSetting(\"autoModerateStories\")}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Featured Content Limit\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Maximum featured items per category\n                      </p>\n                    </div>\n                    <input\n                      type=\"number\"\n                      defaultValue=\"5\"\n                      min=\"1\"\n                      max=\"20\"\n                      className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm w-20\"\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Content Approval Required\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Review all user submissions\n                      </p>\n                    </div>\n                    <ToggleButton\n                      isOn={settings.contentApprovalRequired}\n                      onClick={() => toggleSetting(\"contentApprovalRequired\")}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        Content Backup Frequency\n                      </p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        How often to backup content\n                      </p>\n                    </div>\n                    <select className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\">\n                      <option value=\"daily\">Daily</option>\n                      <option value=\"weekly\">Weekly</option>\n                      <option value=\"monthly\">Monthly</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Advanced Settings */}\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6 flex items-center\">\n                <Database className=\"w-5 h-5 mr-2\" />\n                Advanced Settings\n              </h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      Database Backup\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      Create database backup\n                    </p>\n                  </div>\n                  <Button size=\"sm\" variant=\"outline\">\n                    Backup Now\n                  </Button>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      Clear Cache\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      Clear system cache\n                    </p>\n                  </div>\n                  <Button size=\"sm\" variant=\"outline\">\n                    Clear Cache\n                  </Button>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      System Logs\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      View system logs\n                    </p>\n                  </div>\n                  <Button size=\"sm\" variant=\"outline\">\n                    View Logs\n                  </Button>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      API Rate Limit\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      Requests per minute\n                    </p>\n                  </div>\n                  <input\n                    type=\"number\"\n                    defaultValue=\"100\"\n                    min=\"10\"\n                    max=\"1000\"\n                    className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm w-24\"\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      Error Reporting\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      Send error reports\n                    </p>\n                  </div>\n                  <ToggleButton\n                    isOn={settings.errorReporting}\n                    onClick={() => toggleSetting(\"errorReporting\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      Debug Mode\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      Enable debug logging\n                    </p>\n                  </div>\n                  <ToggleButton\n                    isOn={settings.debugMode}\n                    onClick={() => toggleSetting(\"debugMode\")}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Save Settings */}\n            <div className=\"flex justify-end space-x-4\">\n              <Button variant=\"outline\" size=\"lg\">\n                Reset to Defaults\n              </Button>\n              <Button size=\"lg\" className=\"bg-green-600 hover:bg-green-700\">\n                Save All Settings\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {/* Password Reset Modal */}\n        {passwordResetModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-96 max-w-md mx-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Reset Password for {selectedUser?.name}\n              </h3>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    New Password\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      type={showPassword ? \"text\" : \"password\"}\n                      value={newPassword}\n                      onChange={(e) => setNewPassword(e.target.value)}\n                      className=\"w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                      placeholder=\"Enter new password\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                    >\n                      {showPassword ? (\n                        <svg\n                          className=\"w-5 h-5\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"\n                          />\n                        </svg>\n                      ) : (\n                        <svg\n                          className=\"w-5 h-5\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                          />\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                          />\n                        </svg>\n                      )}\n                    </button>\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Confirm Password\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      type={showConfirmPassword ? \"text\" : \"password\"}\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      className=\"w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                      placeholder=\"Confirm new password\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() =>\n                        setShowConfirmPassword(!showConfirmPassword)\n                      }\n                      className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                    >\n                      {showConfirmPassword ? (\n                        <svg\n                          className=\"w-5 h-5\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"\n                          />\n                        </svg>\n                      ) : (\n                        <svg\n                          className=\"w-5 h-5\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                          />\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                          />\n                        </svg>\n                      )}\n                    </button>\n                  </div>\n                </div>\n                <div className=\"flex justify-end space-x-3\">\n                  <button\n                    onClick={() => {\n                      setPasswordResetModal(false);\n                      setSelectedUser(null);\n                      setNewPassword(\"\");\n                      setConfirmPassword(\"\");\n                      setShowPassword(false);\n                      setShowConfirmPassword(false);\n                    }}\n                    className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handlePasswordResetSubmit}\n                    disabled={passwordResetLoading}\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 disabled:opacity-50 rounded-lg\"\n                  >\n                    {passwordResetLoading ? \"Resetting...\" : \"Reset Password\"}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Delete User Confirmation Modal */}\n        {deleteUserModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-96 max-w-md mx-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Delete User: {userToDelete?.name}\n              </h3>\n              <div className=\"space-y-4\">\n                <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n                  <div className=\"flex items-center\">\n                    <svg\n                      className=\"w-5 h-5 text-red-600 dark:text-red-400 mr-2\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\n                      />\n                    </svg>\n                    <p className=\"text-sm text-red-800 dark:text-red-200\">\n                      <strong>Warning:</strong> This action cannot be undone.\n                      The user will be permanently deleted from the database.\n                    </p>\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Enter your admin password to confirm deletion\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={adminPassword}\n                    onChange={(e) => setAdminPassword(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                    placeholder=\"Enter admin password\"\n                    autoFocus\n                  />\n                </div>\n                <div className=\"flex justify-end space-x-3\">\n                  <button\n                    onClick={() => {\n                      setDeleteUserModal(false);\n                      setUserToDelete(null);\n                      setAdminPassword(\"\");\n                    }}\n                    className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={handleDeleteUserSubmit}\n                    disabled={deleteUserLoading}\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 hover:bg-red-700 disabled:opacity-50 rounded-lg\"\n                  >\n                    {deleteUserLoading ? \"Deleting...\" : \"Delete User\"}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Success/Error Popup */}\n        {showSuccessPopup && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl p-8 max-w-md mx-4 text-center shadow-2xl transform transition-all duration-300 scale-100\">\n              <div className=\"mb-4\">\n                {successMessage.includes(\"❌\") ? (\n                  <div className=\"w-16 h-16 mx-auto bg-red-100 dark:bg-red-900 rounded-full flex items-center justify-center mb-4\">\n                    <svg\n                      className=\"w-8 h-8 text-red-600 dark:text-red-400\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M6 18L18 6M6 6l12 12\"\n                      />\n                    </svg>\n                  </div>\n                ) : (\n                  <div className=\"w-16 h-16 mx-auto bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mb-4\">\n                    <svg\n                      className=\"w-8 h-8 text-green-600 dark:text-green-400\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M5 13l4 4L19 7\"\n                      />\n                    </svg>\n                  </div>\n                )}\n              </div>\n              <h3\n                className={`text-lg font-semibold mb-2 ${\n                  successMessage.includes(\"❌\")\n                    ? \"text-red-900 dark:text-red-100\"\n                    : \"text-green-900 dark:text-green-100\"\n                }`}\n              >\n                {successMessage.includes(\"❌\") ? \"Error\" : \"Success!\"}\n              </h3>\n              <p\n                className={`text-sm ${\n                  successMessage.includes(\"❌\")\n                    ? \"text-red-700 dark:text-red-300\"\n                    : \"text-green-700 dark:text-green-300\"\n                }`}\n              >\n                {successMessage.replace(\"❌ \", \"\")}\n              </p>\n              <button\n                onClick={() => setShowSuccessPopup(false)}\n                className={`mt-4 px-6 py-2 rounded-lg font-medium transition-colors ${\n                  successMessage.includes(\"❌\")\n                    ? \"bg-red-600 hover:bg-red-700 text-white\"\n                    : \"bg-green-600 hover:bg-green-700 text-white\"\n                }`}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Create User Modal */}\n        {showCreateUserModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-96 max-w-md mx-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Create New Account\n              </h3>\n              <form onSubmit={handleCreateUser} className=\"space-y-4\">\n                {createUserErrors.general && (\n                  <div className=\"bg-red-50 dark:bg-red-900 border border-red-200 dark:border-red-700 text-red-600 dark:text-red-400 px-3 py-2 rounded-lg text-sm\">\n                    {createUserErrors.general}\n                  </div>\n                )}\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Full Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={createUserForm.name}\n                    onChange={(e) =>\n                      setCreateUserForm((prev) => ({\n                        ...prev,\n                        name: e.target.value,\n                      }))\n                    }\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                    placeholder=\"Enter full name\"\n                  />\n                  {createUserErrors.name && (\n                    <p className=\"text-red-500 text-xs mt-1\">\n                      {createUserErrors.name}\n                    </p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    value={createUserForm.email}\n                    onChange={(e) =>\n                      setCreateUserForm((prev) => ({\n                        ...prev,\n                        email: e.target.value,\n                      }))\n                    }\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                    placeholder=\"Enter email address\"\n                  />\n                  {createUserErrors.email && (\n                    <p className=\"text-red-500 text-xs mt-1\">\n                      {createUserErrors.email}\n                    </p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Role\n                  </label>\n                  <select\n                    value={createUserForm.role}\n                    onChange={(e) =>\n                      setCreateUserForm((prev) => ({\n                        ...prev,\n                        role: e.target.value,\n                      }))\n                    }\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  >\n                    <option value=\"student\">Student</option>\n                    <option value=\"mentor\">Mentor</option>\n                    <option value=\"admin\">Admin</option>\n                  </select>\n                  {createUserErrors.role && (\n                    <p className=\"text-red-500 text-xs mt-1\">\n                      {createUserErrors.role}\n                    </p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={createUserForm.password}\n                    onChange={(e) =>\n                      setCreateUserForm((prev) => ({\n                        ...prev,\n                        password: e.target.value,\n                      }))\n                    }\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                    placeholder=\"Enter password\"\n                  />\n                  {createUserErrors.password && (\n                    <p className=\"text-red-500 text-xs mt-1\">\n                      {createUserErrors.password}\n                    </p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Confirm Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={createUserForm.confirmPassword}\n                    onChange={(e) =>\n                      setCreateUserForm((prev) => ({\n                        ...prev,\n                        confirmPassword: e.target.value,\n                      }))\n                    }\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                    placeholder=\"Confirm password\"\n                  />\n                  {createUserErrors.confirmPassword && (\n                    <p className=\"text-red-500 text-xs mt-1\">\n                      {createUserErrors.confirmPassword}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"flex justify-end space-x-3\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowCreateUserModal(false);\n                      setCreateUserForm({\n                        name: \"\",\n                        email: \"\",\n                        password: \"\",\n                        confirmPassword: \"\",\n                        role: \"student\",\n                      });\n                      setCreateUserErrors({});\n                    }}\n                    className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={createUserLoading}\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 disabled:opacity-50 rounded-lg\"\n                  >\n                    {createUserLoading ? \"Creating...\" : \"Create Account\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"names":["AdminDashboard","t","useTranslation","user","useAuth","loading","setLoading","useState","dashboardData","setDashboardData","users","setUsers","activeTab","setActiveTab","timeRange","setTimeRange","searchTerm","setSearchTerm","roleFilter","setRoleFilter","statusFilter","setStatusFilter","currentPage","setCurrentPage","pagination","setPagination","error","setError","quizData","setQuizData","quizLoading","setQuizLoading","lastQuizRefresh","setLastQuizRefresh","passwordResetModal","setPasswordResetModal","selectedUser","setSelectedUser","newPassword","setNewPassword","confirmPassword","setConfirmPassword","passwordResetLoading","setPasswordResetLoading","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","showSuccessPopup","setShowSuccessPopup","successMessage","setSuccessMessage","deleteUserModal","setDeleteUserModal","userToDelete","setUserToDelete","adminPassword","setAdminPassword","deleteUserLoading","setDeleteUserLoading","refreshing","setRefreshing","lastFetchTime","setLastFetchTime","showCreateUserModal","setShowCreateUserModal","createUserForm","setCreateUserForm","name","email","password","role","createUserLoading","setCreateUserLoading","createUserErrors","setCreateUserErrors","settings","setSettings","maintenanceMode","registrationStatus","emailNotifications","passwordRequirements","twoFactorAuth","ipWhitelist","autoSaveResults","autoModerateStories","contentApprovalRequired","errorReporting","debugMode","className","children","jsxs","jsx","Shield","useEffect","async","fetchDashboardData","length","fetchUsers","fetchQuizData","loadData","interval","setInterval","clearInterval","forceRefresh","now","Date","timeoutPromise","Promise","_","reject","setTimeout","Error","response","race","apiService","getAdminDashboard","data","success","message","errorMessage","status","code","page","search","params","limit","getAdminUsers","handlePageChange","newPage","getAdminQuizData","backendData","mappedData","totalQuizzes","guestQuizzes","authenticatedQuizzes","personalityDistribution","analytical","_a","Analyst","creative","_b","Creator","social","_c","Helper","leadership","_d","Leader","explorer","_e","Explorer","recentQuizzes","averageCompletionTime","_f","quizStats","totalAnswers","_g","mostCommonPersonality","_h","toggleSetting","settingName","prev","ToggleButton","isOn","onClick","disabled","SkeletonCard","SkeletonChart","SkeletonStats","Array","map","i","SkeletonTable","AlertCircle","userStats","totalUsers","activeUsers","adminUsers","studentUsers","newUsersThisMonth","newUsersToday","userGrowth","platformStats","engagementData","deviceData","recentActivities","recentUsers","tabs","id","icon","BarChart3","Users","Target","TrendingUp","BookOpen","Settings","refreshPromises","push","allSettled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","Calendar","toLocaleDateString","Bell","tab","Activity","Math","round","Zap","UserCheck","mentorUsers","ResponsiveContainer","width","height","AreaChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","type","stackId","fillOpacity","Object","entries","key","value","replace","trim","slice","charAt","toUpperCase","createdAt","Plus","Search","placeholder","onChange","e","target","isActive","lastLogin","handleDeleteUser","handlePasswordReset","MoreHorizontal","min","hasPrev","hasNext","Fragment","RefreshCw","toLocaleTimeString","Clock","RechartsPieChart","Pie","_i","color","_j","_k","_l","cx","cy","labelLine","label","percent","toFixed","outerRadius","_m","_n","_o","_p","entry","index","Cell","Legend","BarChart","Bar","score","_q","_r","_s","_t","time","angle","position","formatter","_u","_v","_w","_x","_y","quiz","userId","quizType","personalityType","completionTime","colSpan","defaultValue","max","Database","Button","size","variant","resetUserPassword","autoFocus","deleteUser","includes","onSubmit","preventDefault","errors","test","keys","createUser","general"],"mappings":"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"}