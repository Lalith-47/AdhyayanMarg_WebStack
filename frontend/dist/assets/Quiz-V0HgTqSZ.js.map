{"version":3,"file":"Quiz-V0HgTqSZ.js","sources":["../../src/pages/Quiz.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Target, ArrowRight, ArrowLeft } from \"lucide-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport Button from \"../components/UI/Button\";\nimport Card from \"../components/UI/Card\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport apiService from \"../utils/api\";\n\nconst Quiz = () => {\n  const { t } = useTranslation();\n  const { user, isAuthenticated } = useAuth();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [quizStartTime, setQuizStartTime] = useState(null);\n  const [sessionId] = useState(\n    () => `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  );\n\n  // Basic 5 questions for non-logged users (matching backend IDs)\n  const basicQuestions = [\n    {\n      id: \"mock_q1\",\n      question: \"What type of work environment do you prefer?\",\n      options: [\n        { id: \"a\", text: \"Collaborative team environment\" },\n        { id: \"b\", text: \"Independent and quiet workspace\" },\n        { id: \"c\", text: \"Creative and flexible environment\" },\n        { id: \"d\", text: \"Fast-paced and challenging\" },\n      ],\n    },\n    {\n      id: \"mock_q2\",\n      question: \"Which activity interests you most?\",\n      options: [\n        { id: \"a\", text: \"Solving complex problems\" },\n        { id: \"b\", text: \"Creating art or design\" },\n        { id: \"c\", text: \"Helping others\" },\n        { id: \"d\", text: \"Leading projects\" },\n      ],\n    },\n    {\n      id: \"mock_q3\",\n      question: \"What motivates you most?\",\n      options: [\n        { id: \"a\", text: \"Achieving technical excellence\" },\n        { id: \"b\", text: \"Expressing creativity\" },\n        { id: \"c\", text: \"Making a positive impact\" },\n        { id: \"d\", text: \"Building and leading teams\" },\n      ],\n    },\n    {\n      id: \"mock_q4\",\n      question: \"What type of learning do you prefer?\",\n      options: [\n        { id: \"a\", text: \"Hands-on experimentation\" },\n        { id: \"b\", text: \"Visual and creative learning\" },\n        { id: \"c\", text: \"Collaborative group learning\" },\n        { id: \"d\", text: \"Independent research\" },\n      ],\n    },\n    {\n      id: \"mock_q5\",\n      question: \"What type of challenges do you enjoy?\",\n      options: [\n        { id: \"a\", text: \"Technical and logical problems\" },\n        { id: \"b\", text: \"Creative challenges\" },\n        { id: \"c\", text: \"Social and communication challenges\" },\n        { id: \"d\", text: \"Strategic planning challenges\" },\n      ],\n    },\n  ];\n\n  // Extended 15 questions for logged-in users (includes basic 5 + 10 more)\n  const extendedQuestions = [\n    ...basicQuestions, // First 5 questions (mock_q1 to mock_q5)\n    {\n      id: \"detailed_q6\",\n      question: \"What is your ideal work schedule?\",\n      options: [\n        { id: \"a\", text: \"Traditional 9-5 with clear boundaries\" },\n        { id: \"b\", text: \"Flexible hours with remote work\" },\n        { id: \"c\", text: \"Variable schedule with travel\" },\n        { id: \"d\", text: \"Intensive periods with breaks\" },\n      ],\n    },\n    {\n      id: \"detailed_q7\",\n      question: \"What type of problems do you find most satisfying to solve?\",\n      options: [\n        { id: \"a\", text: \"Data analysis and finding patterns\" },\n        { id: \"b\", text: \"Design problems requiring aesthetics\" },\n        { id: \"c\", text: \"Interpersonal conflicts and team dynamics\" },\n        { id: \"d\", text: \"Strategic business problems\" },\n      ],\n    },\n    {\n      id: \"detailed_q8\",\n      question: \"How do you prefer to handle feedback?\",\n      options: [\n        { id: \"a\", text: \"Receive detailed written feedback\" },\n        { id: \"b\", text: \"Get visual demonstrations\" },\n        { id: \"c\", text: \"Have one-on-one conversations\" },\n        { id: \"d\", text: \"Participate in group discussions\" },\n      ],\n    },\n    {\n      id: \"detailed_q9\",\n      question:\n        \"What type of work environment brings out your best performance?\",\n      options: [\n        {\n          id: \"a\",\n          text: \"Quiet, focused environment with minimal distractions\",\n        },\n        { id: \"b\", text: \"Creative space with inspiring visuals\" },\n        { id: \"c\", text: \"Collaborative space with team interaction\" },\n        { id: \"d\", text: \"Dynamic environment with leadership opportunities\" },\n      ],\n    },\n    {\n      id: \"detailed_q10\",\n      question: \"How do you approach learning new technologies?\",\n      options: [\n        { id: \"a\", text: \"Read technical documentation thoroughly\" },\n        { id: \"b\", text: \"Experiment with hands-on projects\" },\n        { id: \"c\", text: \"Learn through team collaboration\" },\n        { id: \"d\", text: \"Take structured courses and certifications\" },\n      ],\n    },\n    {\n      id: \"detailed_q11\",\n      question: \"What type of feedback do you value most?\",\n      options: [\n        { id: \"a\", text: \"Detailed technical feedback\" },\n        { id: \"b\", text: \"Creative and aesthetic feedback\" },\n        { id: \"c\", text: \"Personal and emotional feedback\" },\n        { id: \"d\", text: \"Strategic and business feedback\" },\n      ],\n    },\n    {\n      id: \"detailed_q12\",\n      question: \"How do you approach failure?\",\n      options: [\n        { id: \"a\", text: \"Analyze what went wrong systematically\" },\n        { id: \"b\", text: \"Try a completely different approach\" },\n        { id: \"c\", text: \"Seek support from others\" },\n        { id: \"d\", text: \"Take responsibility and learn from it\" },\n      ],\n    },\n    {\n      id: \"detailed_q13\",\n      question: \"What type of team role do you naturally take?\",\n      options: [\n        { id: \"a\", text: \"Technical expert and problem solver\" },\n        { id: \"b\", text: \"Creative contributor and innovator\" },\n        { id: \"c\", text: \"Team player and supporter\" },\n        { id: \"d\", text: \"Leader and coordinator\" },\n      ],\n    },\n    {\n      id: \"detailed_q14\",\n      question: \"How do you prefer to measure success?\",\n      options: [\n        { id: \"a\", text: \"Through quantitative metrics and data\" },\n        { id: \"b\", text: \"Through creative output and innovation\" },\n        { id: \"c\", text: \"Through positive impact on others\" },\n        { id: \"d\", text: \"Through team achievements and growth\" },\n      ],\n    },\n    {\n      id: \"detailed_q15\",\n      question: \"What type of work-life balance do you prefer?\",\n      options: [\n        { id: \"a\", text: \"Focused work blocks with clear boundaries\" },\n        { id: \"b\", text: \"Flexible schedule with creative freedom\" },\n        { id: \"c\", text: \"Collaborative schedule with team interaction\" },\n        { id: \"d\", text: \"Dynamic schedule with leadership responsibilities\" },\n      ],\n    },\n  ];\n\n  // Choose questions based on authentication status\n  const questions = isAuthenticated ? extendedQuestions : basicQuestions;\n\n  const handleAnswerSelect = (questionId, answerId) => {\n    setAnswers((prev) => ({\n      ...prev,\n      [questionId]: answerId,\n    }));\n  };\n\n  const handleNext = async () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      // Quiz completed - save results for both authenticated and guest users\n      setIsSubmitting(true);\n      try {\n        // Calculate completion time\n        const completionTime = quizStartTime\n          ? Math.floor((Date.now() - quizStartTime) / 1000)\n          : 300;\n\n        // Prepare quiz data in the format expected by backend\n        const quizData = {\n          answers: Object.keys(answers).map((questionId) => ({\n            questionId: questionId, // Keep as string to match backend expectations\n            selectedOption: answers[questionId], // Use selectedOption instead of answerId\n          })),\n          completionTime: completionTime,\n          sessionId: sessionId, // Include session ID for guest users\n        };\n\n        console.log(\"Submitting quiz data:\", quizData);\n        const response = await apiService.submitQuiz(quizData);\n        console.log(\"✅ Quiz results saved to database:\", response.data);\n      } catch (error) {\n        console.error(\"❌ Failed to save quiz results:\", error);\n        // Still show results even if save fails\n      } finally {\n        setIsSubmitting(false);\n      }\n      setShowResults(true);\n    }\n  };\n\n  const calculatePersonalityType = () => {\n    const scores = {\n      analytical: 0,\n      creative: 0,\n      social: 0,\n      leadership: 0,\n    };\n\n    // Enhanced scoring based on answer patterns for both 5 and 15 questions\n    questions.forEach((question, index) => {\n      const answer = answers[question.id];\n      if (answer) {\n        switch (question.id) {\n          case 1: // Work environment\n            if (answer === \"a\") scores.social += 2;\n            else if (answer === \"b\") scores.analytical += 2;\n            else if (answer === \"c\") scores.leadership += 2;\n            else if (answer === \"d\") scores.creative += 2;\n            break;\n          case 2: // Motivation\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.social += 2;\n            else if (answer === \"c\") scores.creative += 2;\n            else if (answer === \"d\") scores.leadership += 2;\n            break;\n          case 3: // Work schedule\n            if (answer === \"a\") scores.analytical += 1;\n            else if (answer === \"b\") scores.creative += 2;\n            else if (answer === \"c\") scores.leadership += 2;\n            else if (answer === \"d\") scores.creative += 1;\n            break;\n          case 4: // Task preferences\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.creative += 2;\n            else if (answer === \"c\") scores.social += 2;\n            else if (answer === \"d\") scores.analytical += 1;\n            break;\n          case 5: // Career goals\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.leadership += 2;\n            else if (answer === \"c\") scores.leadership += 2;\n            else if (answer === \"d\") scores.social += 2;\n            break;\n          // Extended questions for logged-in users\n          case 6: // Learning preference\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.analytical += 1;\n            else if (answer === \"c\") scores.social += 2;\n            else if (answer === \"d\") scores.analytical += 1;\n            break;\n          case 7: // Challenge preference\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.creative += 2;\n            else if (answer === \"c\") scores.social += 2;\n            else if (answer === \"d\") scores.leadership += 2;\n            break;\n          case 8: // Deadline handling\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.leadership += 1;\n            else if (answer === \"c\") scores.social += 2;\n            else if (answer === \"d\") scores.leadership += 2;\n            break;\n          case 9: // Motivation\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.creative += 2;\n            else if (answer === \"c\") scores.social += 2;\n            else if (answer === \"d\") scores.leadership += 2;\n            break;\n          case 10: // Communication style\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.creative += 2;\n            else if (answer === \"c\") scores.social += 2;\n            else if (answer === \"d\") scores.leadership += 1;\n            break;\n          case 11: // Feedback preference\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.creative += 2;\n            else if (answer === \"c\") scores.social += 2;\n            else if (answer === \"d\") scores.leadership += 2;\n            break;\n          case 12: // Failure approach\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.creative += 1;\n            else if (answer === \"c\") scores.social += 2;\n            else if (answer === \"d\") scores.leadership += 2;\n            break;\n          case 13: // Team role\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.creative += 2;\n            else if (answer === \"c\") scores.social += 2;\n            else if (answer === \"d\") scores.leadership += 2;\n            break;\n          case 14: // Success measurement\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.creative += 2;\n            else if (answer === \"c\") scores.social += 2;\n            else if (answer === \"d\") scores.leadership += 2;\n            break;\n          case 15: // Work-life balance\n            if (answer === \"a\") scores.analytical += 2;\n            else if (answer === \"b\") scores.creative += 2;\n            else if (answer === \"c\") scores.social += 2;\n            else if (answer === \"d\") scores.leadership += 2;\n            break;\n        }\n      }\n    });\n\n    // Find the highest scoring personality type\n    const maxScore = Math.max(...Object.values(scores));\n    const personalityType = Object.keys(scores).find(\n      (key) => scores[key] === maxScore\n    );\n\n    return {\n      type: personalityType,\n      scores,\n      maxScore,\n    };\n  };\n\n  const getPersonalityInsights = (personalityType) => {\n    const insights = {\n      analytical: {\n        title: \"Analytical Thinker\",\n        description:\n          \"You excel at problem-solving and logical thinking. You prefer structured environments and enjoy working with data and systems.\",\n        strengths: [\n          \"Problem-solving\",\n          \"Logical reasoning\",\n          \"Attention to detail\",\n          \"Data analysis\",\n        ],\n        careerPaths: [\n          \"Data Scientist\",\n          \"Software Engineer\",\n          \"Research Analyst\",\n          \"Financial Analyst\",\n        ],\n        workEnvironment:\n          \"Structured, data-driven environments with clear objectives\",\n        color: \"blue\",\n      },\n      creative: {\n        title: \"Creative Innovator\",\n        description:\n          \"You thrive in flexible, innovative environments. You enjoy thinking outside the box and bringing new ideas to life.\",\n        strengths: [\n          \"Innovation\",\n          \"Design thinking\",\n          \"Adaptability\",\n          \"Visual communication\",\n        ],\n        careerPaths: [\n          \"Graphic Designer\",\n          \"Product Manager\",\n          \"Marketing Specialist\",\n          \"Content Creator\",\n        ],\n        workEnvironment:\n          \"Flexible, creative spaces with room for experimentation\",\n        color: \"purple\",\n      },\n      social: {\n        title: \"People Connector\",\n        description:\n          \"You excel at building relationships and helping others. You prefer collaborative environments and enjoy making a positive impact.\",\n        strengths: [\n          \"Communication\",\n          \"Empathy\",\n          \"Teamwork\",\n          \"Relationship building\",\n        ],\n        careerPaths: [\n          \"Human Resources\",\n          \"Sales Representative\",\n          \"Social Worker\",\n          \"Teacher\",\n        ],\n        workEnvironment: \"Collaborative, people-focused environments\",\n        color: \"green\",\n      },\n      leadership: {\n        title: \"Natural Leader\",\n        description:\n          \"You have strong leadership qualities and enjoy taking charge. You excel at motivating others and driving projects forward.\",\n        strengths: [\n          \"Leadership\",\n          \"Strategic thinking\",\n          \"Decision making\",\n          \"Team motivation\",\n        ],\n        careerPaths: [\n          \"Project Manager\",\n          \"Business Analyst\",\n          \"Entrepreneur\",\n          \"Team Lead\",\n        ],\n        workEnvironment:\n          \"Dynamic, goal-oriented environments with leadership opportunities\",\n        color: \"orange\",\n      },\n    };\n\n    return insights[personalityType] || insights.analytical;\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n    }\n  };\n\n  const startQuiz = () => {\n    setQuizStarted(true);\n    setCurrentQuestion(0);\n    setAnswers({});\n    setQuizStartTime(Date.now()); // Track quiz start time\n  };\n\n  const progress = ((currentQuestion + 1) / questions.length) * 100;\n\n  // Quiz start screen\n  if (!quizStarted) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-12 px-4\">\n        <div className=\"max-w-2xl mx-auto\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n          >\n            <Card className=\"p-8 text-center\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <Target className=\"w-8 h-8 text-blue-600\" />\n              </div>\n\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">\n                {isAuthenticated\n                  ? t(\"quiz.detailedAssessment\")\n                  : t(\"quiz.quickQuiz\")}\n              </h1>\n\n              <p className=\"text-gray-600 dark:text-gray-300 mb-8\">\n                {isAuthenticated\n                  ? t(\"quiz.comprehensiveDescription\")\n                  : t(\"quiz.quickDescription\")}\n              </p>\n\n              <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4 mb-8\">\n                <div className=\"flex justify-center items-center space-x-6 text-sm text-gray-600 dark:text-gray-300\">\n                  <div className=\"flex items-center\">\n                    <span className=\"font-medium\">\n                      {questions.length} {t(\"quiz.questions\")}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"font-medium\">\n                      {isAuthenticated ? \"8-12\" : \"3-5\"} {t(\"quiz.minutes\")}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"font-medium\">\n                      {isAuthenticated\n                        ? t(\"quiz.savedResults\")\n                        : t(\"quiz.freeResults\")}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              <Button\n                size=\"lg\"\n                onClick={startQuiz}\n                className=\"min-h-[52px] text-lg px-8\"\n              >\n                {isAuthenticated ? t(\"quiz.startAssessment\") : t(\"quiz.start\")}\n                <ArrowRight className=\"w-5 h-5 ml-2\" />\n              </Button>\n\n              {!isAuthenticated && (\n                <p className=\"text-sm text-gray-500 mt-4\">\n                  <a href=\"/login\" className=\"text-blue-600 hover:underline\">\n                    {t(\"auth.createAccount\")}\n                  </a>{\" \"}\n                  {t(\"quiz.signUpPrompt\")}\n                </p>\n              )}\n            </Card>\n          </motion.div>\n        </div>\n      </div>\n    );\n  }\n\n  // Results screen\n  if (showResults) {\n    const personalityResult = calculatePersonalityType();\n    const insights = getPersonalityInsights(personalityResult.type);\n\n    const getColorClasses = (color) => {\n      const colorMap = {\n        blue: {\n          bg: \"bg-blue-100 dark:bg-blue-900/20\",\n          text: \"text-blue-600 dark:text-blue-400\",\n          border: \"border-blue-200 dark:border-blue-700\",\n          accent: \"bg-blue-500\",\n        },\n        purple: {\n          bg: \"bg-purple-100 dark:bg-purple-900/20\",\n          text: \"text-purple-600 dark:text-purple-400\",\n          border: \"border-purple-200 dark:border-purple-700\",\n          accent: \"bg-purple-500\",\n        },\n        green: {\n          bg: \"bg-green-100 dark:bg-green-900/20\",\n          text: \"text-green-600 dark:text-green-400\",\n          border: \"border-green-200 dark:border-green-700\",\n          accent: \"bg-green-500\",\n        },\n        orange: {\n          bg: \"bg-orange-100 dark:bg-orange-900/20\",\n          text: \"text-orange-600 dark:text-orange-400\",\n          border: \"border-orange-200 dark:border-orange-700\",\n          accent: \"bg-orange-500\",\n        },\n      };\n      return colorMap[color] || colorMap.blue;\n    };\n\n    const colors = getColorClasses(insights.color);\n\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-12 px-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"space-y-8\"\n          >\n            {/* Header */}\n            <Card className=\"p-8 text-center\">\n              <div\n                className={`w-20 h-20 ${colors.bg} rounded-full flex items-center justify-center mx-auto mb-6`}\n              >\n                <Target className={`w-10 h-10 ${colors.text}`} />\n              </div>\n\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">\n                Your Career Personality Analysis\n              </h1>\n\n              <p className=\"text-gray-600 dark:text-gray-300 mb-6\">\n                {isAuthenticated\n                  ? \"Based on your detailed responses, here's your comprehensive career assessment. Your results have been saved to your profile!\"\n                  : \"Based on your responses, here's your personalized career assessment:\"}\n              </p>\n            </Card>\n\n            {/* Personality Type */}\n            <Card className=\"p-8\">\n              <div className=\"text-center mb-8\">\n                <h2 className={`text-2xl font-bold ${colors.text} mb-4`}>\n                  {insights.title}\n                </h2>\n                <p className=\"text-gray-600 dark:text-gray-300 text-lg\">\n                  {insights.description}\n                </p>\n              </div>\n\n              {/* Score Breakdown */}\n              <div className=\"mb-8\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Your Personality Scores\n                </h3>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  {Object.entries(personalityResult.scores).map(\n                    ([type, score]) => (\n                      <div\n                        key={type}\n                        className=\"bg-gray-100 dark:bg-gray-800 rounded-lg p-4\"\n                      >\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <span className=\"capitalize font-medium text-gray-700 dark:text-gray-300\">\n                            {type}\n                          </span>\n                          <span className=\"text-sm font-bold text-gray-900 dark:text-white\">\n                            {score}\n                          </span>\n                        </div>\n                        <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                          <div\n                            className={`${colors.accent} h-2 rounded-full transition-all duration-500`}\n                            style={{\n                              width: `${\n                                (score / personalityResult.maxScore) * 100\n                              }%`,\n                            }}\n                          />\n                        </div>\n                      </div>\n                    )\n                  )}\n                </div>\n              </div>\n            </Card>\n\n            {/* Strengths */}\n            <Card className=\"p-8\">\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6\">\n                Your Key Strengths\n              </h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                {insights.strengths.map((strength, index) => (\n                  <div\n                    key={index}\n                    className={`${colors.bg} ${colors.border} border rounded-lg p-4 text-center`}\n                  >\n                    <span className={`font-medium ${colors.text}`}>\n                      {strength}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </Card>\n\n            {/* Career Paths */}\n            <Card className=\"p-8\">\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6\">\n                Recommended Career Paths\n              </h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                {insights.careerPaths.map((career, index) => (\n                  <div\n                    key={index}\n                    className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-4 text-center hover:shadow-md transition-shadow\"\n                  >\n                    <span className=\"font-medium text-gray-900 dark:text-white\">\n                      {career}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </Card>\n\n            {/* Work Environment */}\n            <Card className=\"p-8\">\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n                Ideal Work Environment\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-300 text-lg\">\n                {insights.workEnvironment}\n              </p>\n            </Card>\n\n            {/* Action Buttons */}\n            <Card className=\"p-8\">\n              <div className=\"space-y-4\">\n                <Button\n                  onClick={() => window.location.reload()}\n                  size=\"lg\"\n                  className=\"w-full\"\n                >\n                  Take Quiz Again\n                </Button>\n\n                <Button\n                  variant=\"outline\"\n                  onClick={() => (window.location.href = \"/\")}\n                  className=\"w-full\"\n                >\n                  Go to Home\n                </Button>\n              </div>\n            </Card>\n          </motion.div>\n        </div>\n      </div>\n    );\n  }\n\n  // Quiz questions\n  const currentQ = questions[currentQuestion];\n  const selectedAnswer = answers[currentQ.id];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-12 px-4\">\n      <div className=\"max-w-2xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n        >\n          {/* Progress */}\n          <div className=\"mb-8\">\n            <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-300 mb-2\">\n              <span>\n                {t(\"quiz.question\")} {currentQuestion + 1} {t(\"quiz.of\")}{\" \"}\n                {questions.length}\n              </span>\n              <span>\n                {Math.round(progress)}% {t(\"common.completed\")}\n              </span>\n            </div>\n            <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n              <motion.div\n                className=\"bg-blue-600 h-2 rounded-full\"\n                initial={{ width: 0 }}\n                animate={{ width: `${progress}%` }}\n                transition={{ duration: 0.3 }}\n              />\n            </div>\n          </div>\n\n          {/* Question */}\n          <Card className=\"p-8\">\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-8\">\n              {currentQ.question}\n            </h2>\n\n            <div className=\"space-y-3 mb-8\">\n              {currentQ.options.map((option) => (\n                <button\n                  key={option.id}\n                  onClick={() => handleAnswerSelect(currentQ.id, option.id)}\n                  className={`w-full p-4 text-left rounded-lg border-2 transition-all ${\n                    selectedAnswer === option.id\n                      ? \"border-blue-500 bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300\"\n                      : \"border-gray-200 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:border-blue-300\"\n                  }`}\n                >\n                  {option.text}\n                </button>\n              ))}\n            </div>\n\n            {/* Navigation */}\n            <div className=\"flex justify-between\">\n              <Button\n                onClick={handlePrevious}\n                disabled={currentQuestion === 0}\n                variant=\"outline\"\n              >\n                <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                Previous\n              </Button>\n\n              <Button\n                onClick={handleNext}\n                disabled={!selectedAnswer || isSubmitting}\n              >\n                {isSubmitting ? (\n                  <>\n                    <LoadingSpinner size=\"sm\" className=\"mr-2\" />\n                    {t(\"quiz.saving\")}\n                  </>\n                ) : (\n                  <>\n                    {currentQuestion === questions.length - 1\n                      ? t(\"quiz.submit\")\n                      : t(\"quiz.next\")}\n                    <ArrowRight className=\"w-4 h-4 ml-2\" />\n                  </>\n                )}\n              </Button>\n            </div>\n          </Card>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"names":["Quiz","t","useTranslation","user","isAuthenticated","useAuth","currentQuestion","setCurrentQuestion","useState","answers","setAnswers","quizStarted","setQuizStarted","showResults","setShowResults","isSubmitting","setIsSubmitting","quizStartTime","setQuizStartTime","sessionId","Date","now","Math","random","toString","substr","basicQuestions","id","question","options","text","extendedQuestions","questions","startQuiz","progress","length","className","children","jsx","motion","div","initial","opacity","y","animate","jsxs","Card","Target","Button","size","onClick","ArrowRight","href","personalityResult","scores","analytical","creative","social","leadership","forEach","index","answer","maxScore","max","Object","values","type","keys","find","key","calculatePersonalityType","insights","personalityType","title","description","strengths","careerPaths","workEnvironment","color","getPersonalityInsights","colors","colorMap","blue","bg","border","accent","purple","green","orange","getColorClasses","entries","map","score","style","width","strength","career","window","location","reload","variant","currentQ","selectedAnswer","round","transition","duration","option","handleAnswerSelect","questionId","answerId","prev","disabled","ArrowLeft","async","completionTime","floor","quizData","selectedOption","apiService","submitQuiz","error","Fragment","LoadingSpinner"],"mappings":"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"}